{
    "sourceFile": "stage1/Player.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1652558177206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1652558235698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import pyaudio, wave, threading, time, sys\n+import PyAudio, wave, threading, time, sys\n \n \n class Player(threading.Thread):\n     def __init__(self,file):\n"
                },
                {
                    "date": 1652623166443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import PyAudio, wave, threading, time, sys\n+import pyaudio, wave, threading, time, sys\n \n \n class Player(threading.Thread):\n     def __init__(self,file):\n"
                }
            ],
            "date": 1652558177206,
            "name": "Commit-0",
            "content": "import pyaudio, wave, threading, time, sys\n\n\nclass Player(threading.Thread):\n    def __init__(self,file):\n        self.wf = wave.open(file)\n        self.p = pyaudio.PyAudio()\n\n\n    def callback(self,in_data, frame_count, time_info, status):\n        data = self.wf.readframes(frame_count)\n        return (data, pyaudio.paContinue)\n\n    def run(self):\n        stream = self.p.open(format=self.p.get_format_from_width(self.wf.getsampwidth()),\n                        channels=self.wf.getnchannels(),\n                        rate=self.wf.getframerate(),\n                        output=True,\n                        stream_callback=self.callback)\n\n        stream.start_stream()\n        while stream.is_active():\n            time.sleep(0.1)\n        stream.stop_stream()\n        stream.close()\n        self.wf.close()\n        self.p.terminate()\n\ndef main():\n    file = sys.argv[1]\n    Player(file).run()\n\nif __name__ == '__main__':\n    main()\n    \n\n\n"
        }
    ]
}