{
    "sourceFile": "stage1/testR.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1652643918944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1652643918944,
            "name": "Commit-0",
            "content": "import socket, struct\n\n# Initialise socket for IPv6 datagrams\nsock = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM, socket.IPPROTO_UDP)\n\n# Allows address to be reused\nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n\n# Binds to all interfaces on the given port\nsock.bind(('', 8080))\n\n# Allow messages from this socket to loop back for development\nsock.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_MULTICAST_LOOP, True)\n\n# Construct message for joining multicast group\nmreq = struct.pack(\"16s15s\".encode('utf-8'), socket.inet_pton(socket.AF_INET6, \"ff02::abcd:1\"), (chr(0) * 16).encode('utf-8'))\nsock.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_JOIN_GROUP, mreq)\n\ndata, addr = sock.recvfrom(1024)\ndata = data.decode()\nprint(data)\n\n"
        }
    ]
}