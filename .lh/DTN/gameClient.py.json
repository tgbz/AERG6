{
    "sourceFile": "DTN/gameClient.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 212,
            "patches": [
                {
                    "date": 1654531288188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1654531466224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 2048\r\n         self.clientPort = 8080\r\n         self.gamePort = 8081\r\n+        self.hostname = socket.gethostname()\r\n         \r\n     def auth(self):\r\n         self.socket.bind('', self.clientPort)\r\n         #send hello-hostname message to server\r\n@@ -19,7 +20,15 @@\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n             \r\n     def gameQueue(self):\r\n         print(\"À espera de jogo....\")\r\n-        self.socket.bind('', self.clientPort)\r\n-    \r\n-    \n\\ No newline at end of file\n+        self.socket.bind('', self.gamePort)\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n+        if data.decode() == \"game-start\":\r\n+            print(\"Jogo iniciado\")\r\n+            self.socket.sendto(\"ack-\".encode(), (addr[0], self.gamePort))\r\n+            \r\n+        print(\"À espera de informações de jogo..\")\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n+        if json.loads(data):\r\n+            print(\"Informações de jogo recebidas\")\r\n+            self.socket.sendto(\"ack-\".encode(), (addr[0], self.gamePort))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532052055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n-import socket, threading, json, random\r\n+import socket, json, random, Player\r\n \r\n serverAddr = \"\"\r\n \r\n-class gameClient(threading.Thread):\r\n+class gameClient():\r\n     def __init__(self):\r\n         self.socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 2048\r\n         self.clientPort = 8080\r\n         self.gamePort = 8081\r\n         self.hostname = socket.gethostname()\r\n+        self.gameSolutions = dict()\r\n+        self.gameMenu = dict()\r\n         \r\n     def auth(self):\r\n         self.socket.bind('', self.clientPort)\r\n         #send hello-hostname message to server\r\n@@ -22,13 +24,31 @@\n     def gameQueue(self):\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind('', self.gamePort)\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        if data.decode() == \"game-start\":\r\n+        if data.split=='gameStart':\r\n             print(\"Jogo iniciado\")\r\n-            self.socket.sendto(\"ack-\".encode(), (addr[0], self.gamePort))\r\n-            \r\n-        print(\"À espera de informações de jogo..\")\r\n+            #send ack with ack-hostname\r\n+            self.socket.sendto(\"ack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+        print(\"A espera de informacoes de jogo...\")\r\n\\ No newline at end of file\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if json.loads(data):\r\n-            print(\"Informações de jogo recebidas\")\r\n-            self.socket.sendto(\"ack-\".encode(), (addr[0], self.gamePort))\n+            self.gameSolutions = json.loads(data)\r\n+            print(\"paths recebidas\")\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n+        if json.loads(data):\r\n+            self.gameMenu = json.loads(data)\r\n+        print(\"Informacoes de jogo recebidas\")\r\n+        print(\"A iniciar jogo...\")\r\n+    \r\n+    def game(self):\r\n+        myGame = dict()\r\n+        for path in self.gameSolutions:\r\n+                for option in self.gameMenu:\r\n+                    startTime = time.time()\r\n+                    print(option)\r\n+                    pl = Player.Player(option, self.gameSolutions[path])\r\n+                    sel = input(\"Selecione a opcao: \")\r\n+                    endTime = time.time()\r\n+                    time = endTime - startTime\r\n+                    myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n+                    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532085795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,5 +50,9 @@\n                     sel = input(\"Selecione a opcao: \")\r\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n-                    \n\\ No newline at end of file\n+        print(\"Jogo Terminado\")\r\n+        self.socket.sendto(json.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n+        print(\"À epspera de resposta...\")\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n+        \n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532093354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,5 +54,5 @@\n         print(\"Jogo Terminado\")\r\n         self.socket.sendto(json.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        \n\\ No newline at end of file\n+        print(data.decode())\n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532136322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, random, Player\r\n+import socket, json, sys, Player\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n@@ -54,5 +54,10 @@\n         print(\"Jogo Terminado\")\r\n         self.socket.sendto(json.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        print(data.decode())\n\\ No newline at end of file\n+        print(data.decode())\r\n+\r\n+def main():\r\n+    global serverAddr\r\n+    serverAddr = sys.argv[1]\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532167489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n         if json.loads(data):\r\n             self.gameMenu = json.loads(data)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A iniciar jogo...\")\r\n+        self.game()\r\n     \r\n     def game(self):\r\n         myGame = dict()\r\n         for path in self.gameSolutions:\r\n@@ -59,5 +60,7 @@\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n-       \n\\ No newline at end of file\n+    client = gameClient()\r\n+    client.auth()\r\n+    client.gameQueue()\r\n"
                },
                {
                    "date": 1654532231339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,4 +63,7 @@\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n     client.auth()\r\n     client.gameQueue()\r\n+\r\n+if __name__ == '__main__':\r\n+    main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1654532396902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         \r\n     def auth(self):\r\n-        self.socket.bind('', self.clientPort)\r\n+        self.socket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n         self.socket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n"
                },
                {
                    "date": 1654532402209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n             \r\n     def gameQueue(self):\r\n         print(\"À espera de jogo....\")\r\n-        self.socket.bind('', self.gamePort)\r\n+        self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='gameStart':\r\n             print(\"Jogo iniciado\")\r\n             #send ack with ack-hostname\r\n"
                },
                {
                    "date": 1654532423938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 2048\r\n         self.clientPort = 8080\r\n         self.gamePort = 8081\r\n-        self.hostname = socket.gethostname()\r\n+        self.hostName = socket.gethostname()\r\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         \r\n     def auth(self):\r\n"
                },
                {
                    "date": 1654532523509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         \r\n     def auth(self):\r\n+        print(\"serverAddr\" + serverAddr)\r\n         self.socket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n         self.socket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n"
                },
                {
                    "date": 1654532530682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n     def __init__(self):\r\n-        self.socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\n+        self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 2048\r\n         self.clientPort = 8080\r\n         self.gamePort = 8081\r\n"
                },
                {
                    "date": 1654532601527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         self.socket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n-            \r\n+        gameQueue()\r\n     def gameQueue(self):\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n@@ -63,8 +63,7 @@\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n     client.auth()\r\n-    client.gameQueue()\r\n \r\n if __name__ == '__main__':\r\n     main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1654554385226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,18 +11,19 @@\n         self.gamePort = 8081\r\n         self.hostName = socket.gethostname()\r\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n-        \r\n+        self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n+        self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n     def auth(self):\r\n         print(\"serverAddr\" + serverAddr)\r\n-        self.socket.bind(('', self.clientPort))\r\n+        self.asocket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n-        self.socket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n+        self.asocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n-        gameQueue()\r\n+        self.gameQueue()\r\n     def gameQueue(self):\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n"
                },
                {
                    "date": 1654554404634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n     def auth(self):\r\n+        print(\"In auth...\")\r\n         print(\"serverAddr\" + serverAddr)\r\n         self.asocket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n         self.asocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n"
                },
                {
                    "date": 1654554412753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,13 @@\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n+        \r\n+        \r\n     def gameQueue(self):\r\n+        \r\n+        print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='gameStart':\r\n"
                },
                {
                    "date": 1654554447179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n     def auth(self):\r\n         print(\"In auth...\")\r\n         print(\"serverAddr\" + serverAddr)\r\n-        self.asocket.bind(('', self.clientPort))\r\n+        self.aSocket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n-        self.asocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n+        self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n"
                },
                {
                    "date": 1654556116635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n         print(\"serverAddr\" + serverAddr)\r\n         self.aSocket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n+        print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n         if data.split=='hello-ack-':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n"
                },
                {
                    "date": 1654556152033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n     def __init__(self):\r\n         self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 2048\r\n-        self.clientPort = 8080\r\n-        self.gamePort = 8081\r\n+        self.clientPort = 8081\r\n+        self.gamePort = 8080\r\n         self.hostName = socket.gethostname()\r\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n"
                },
                {
                    "date": 1654611859826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n-        if data.split=='hello-ack-':\r\n+        if data.split=='hello-ack':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n"
                },
                {
                    "date": 1654611979802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n-        if data.split=='hello-ack':\r\n+        if data=='hello-ack':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n"
                },
                {
                    "date": 1654612040510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.socket.recvfrom(self.buff)\r\n-        if data=='hello-ack':\r\n+        if data.split('-')[0]=='hello' and data.split('-')[1]=='ack':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n"
                },
                {
                    "date": 1654612088129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         self.aSocket.bind(('', self.clientPort))\r\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n-        data,addr = self.socket.recvfrom(self.buff)\r\n+        data,addr = self.aSocket.recvfrom(self.buff)\r\n         if data.split('-')[0]=='hello' and data.split('-')[1]=='ack':\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n"
                },
                {
                    "date": 1654612116592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.aSocket.recvfrom(self.buff)\r\n-        if data.split('-')[0]=='hello' and data.split('-')[1]=='ack':\r\n+        if data.decode() == \"hello-ack\":\r\n             print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n"
                },
                {
                    "date": 1654612143535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.aSocket.recvfrom(self.buff)\r\n         if data.decode() == \"hello-ack\":\r\n-            print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n+            print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \"bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n     def gameQueue(self):\r\n"
                },
                {
                    "date": 1654612160204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.aSocket.recvfrom(self.buff)\r\n         if data.decode() == \"hello-ack\":\r\n-            print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \"bem sucedida\")\r\n+            print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n     def gameQueue(self):\r\n"
                },
                {
                    "date": 1654612257234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.aSocket.recvfrom(self.buff)\r\n         if data.decode() == \"hello-ack\":\r\n             print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n+        elif data.decode() == \"gameStart\":\r\n+            input(\"Jogo iniciado, pressione enter para continuar...\")\r\n+            self.aSocker.sendto(\"ready\".encode(), (serverAddr, self.clientPort))\")\r\n         self.gameQueue()\r\n         \r\n         \r\n     def gameQueue(self):\r\n"
                },
                {
                    "date": 1654612320193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         if data.decode() == \"hello-ack\":\r\n             print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n         elif data.decode() == \"gameStart\":\r\n             input(\"Jogo iniciado, pressione enter para continuar...\")\r\n-            self.aSocker.sendto(\"ready\".encode(), (serverAddr, self.clientPort))\")\r\n+            self.aSocker.sendto(\"gameStart-ack\".encode(), (serverAddr, self.clientPort))\r\n         self.gameQueue()\r\n         \r\n         \r\n     def gameQueue(self):\r\n"
                },
                {
                    "date": 1654612744823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,8 @@\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n         data,addr = self.aSocket.recvfrom(self.buff)\r\n         if data.decode() == \"hello-ack\":\r\n             print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n-        elif data.decode() == \"gameStart\":\r\n-            input(\"Jogo iniciado, pressione enter para continuar...\")\r\n-            self.aSocker.sendto(\"gameStart-ack\".encode(), (serverAddr, self.clientPort))\r\n         self.gameQueue()\r\n         \r\n         \r\n     def gameQueue(self):\r\n"
                },
                {
                    "date": 1654612782809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,12 +32,13 @@\n         print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n+        data = data.decode()\r\n         if data.split=='gameStart':\r\n-            print(\"Jogo iniciado\")\r\n+            \r\n             #send ack with ack-hostname\r\n-            self.socket.sendto(\"ack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+            self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if json.loads(data):\r\n             self.gameSolutions = json.loads(data)\r\n"
                },
                {
                    "date": 1654612801912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n         if data.split=='gameStart':\r\n-            \r\n+            input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n"
                },
                {
                    "date": 1654614196195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n         if data.split=='gameStart':\r\n-            input(\"Jogo Encontrado, pressione enter para continuar\")\r\n+            var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n"
                },
                {
                    "date": 1654638793015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n-        if data.split=='gameStart':\r\n+        if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n"
                },
                {
                    "date": 1654638848950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        if json.loads(data):\r\n-            self.gameSolutions = json.loads(data)\r\n+        if pickle.loads(data):\r\n+            self.gameSolutions = pickle.loads(data)\r\n             print(\"paths recebidas\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if json.loads(data):\r\n             self.gameMenu = json.loads(data)\r\n"
                },
                {
                    "date": 1654638859295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n         if pickle.loads(data):\r\n             self.gameSolutions = pickle.loads(data)\r\n             print(\"paths recebidas\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        if json.loads(data):\r\n-            self.gameMenu = json.loads(data)\r\n+        if pickle.loads(data):\r\n+            self.gameMenu = pickle.loads(data)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A iniciar jogo...\")\r\n         self.game()\r\n     \r\n"
                },
                {
                    "date": 1654638864948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, sys, Player\r\n+import socket, json, sys, Player, pickle\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n"
                },
                {
                    "date": 1654638873098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         print(\"Jogo Terminado\")\r\n-        self.socket.sendto(json.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n+        self.socket.sendto(pickle.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         print(data.decode())\r\n \r\n"
                },
                {
                    "date": 1654639624632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import socket, json, sys, Player, pickle\r\n+import socket, json, sys, Player, pickle, time\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n     def __init__(self):\r\n         self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n-        self.buff = 2048\r\n+        self.buff = 4096\r\n         self.clientPort = 8081\r\n         self.gamePort = 8080\r\n         self.hostName = socket.gethostname()\r\n         self.gameSolutions = dict()\r\n"
                },
                {
                    "date": 1654640540906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n+        self.socket.settimeout(3)\r\n     def auth(self):\r\n         print(\"In auth...\")\r\n         print(\"serverAddr\" + serverAddr)\r\n         self.aSocket.bind(('', self.clientPort))\r\n"
                },
                {
                    "date": 1654641435638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.socket.settimeout(3)\r\n+        \r\n     def auth(self):\r\n         print(\"In auth...\")\r\n         print(\"serverAddr\" + serverAddr)\r\n         self.aSocket.bind(('', self.clientPort))\r\n"
                },
                {
                    "date": 1654641778158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,14 +41,16 @@\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        if pickle.loads(data):\r\n-            self.gameSolutions = pickle.loads(data)\r\n-            print(\"paths recebidas\")\r\n-        data, addr = self.socket.recvfrom(self.buff)\r\n-        if pickle.loads(data):\r\n-            self.gameMenu = pickle.loads(data)\r\n+        done = 0\r\n+        while not done:\r\n+            try :\r\n+                self.gameOptions = pickle.loads(data)\r\n+                self.socket.sendto(\"gameOptions-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+                done = 1\r\n+            except Exception as e:\r\n+                print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A iniciar jogo...\")\r\n         self.game()\r\n     \r\n"
                },
                {
                    "date": 1654641817643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,12 @@\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n-        data, addr = self.socket.recvfrom(self.buff)\r\n         done = 0\r\n         while not done:\r\n             try :\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n                 self.gameOptions = pickle.loads(data)\r\n                 self.socket.sendto(\"gameOptions-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654641871496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         print(\"Jogo Terminado\")\r\n-        self.socket.sendto(pickle.dumps(myGame).encode(), (serverAddr, self.gamePort))\r\n+        self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         print(data.decode())\r\n \r\n"
                },
                {
                    "date": 1654641888952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n         print(\"A iniciar jogo...\")\r\n         self.game()\r\n     \r\n     def game(self):\r\n+        self.socket.settimeout(None)\r\n         myGame = dict()\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n@@ -65,8 +66,11 @@\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         print(\"Jogo Terminado\")\r\n+        while True:\r\n+            try:\r\n+                self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n         self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         print(data.decode())\r\n"
                },
                {
                    "date": 1654641922953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,10 @@\n         print(\"A iniciar jogo...\")\r\n         self.game()\r\n     \r\n     def game(self):\r\n+        myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        myGame = dict()\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n@@ -66,11 +66,9 @@\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         print(\"Jogo Terminado\")\r\n-        while True:\r\n-            try:\r\n-                self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n+        \r\n         self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n         print(\"À epspera de resposta...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         print(data.decode())\r\n"
                },
                {
                    "date": 1654641959278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,12 +67,16 @@\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         print(\"Jogo Terminado\")\r\n         \r\n-        self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n-        print(\"À epspera de resposta...\")\r\n-        data, addr = self.socket.recvfrom(self.buff)\r\n-        print(data.decode())\r\n+        done = 0\r\n+        self.socket.settimeout(3)\r\n+        while not done:\r\n+            try:\r\n+                self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n+                print(\"À epspera de resposta...\")\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n+                print(data.decode())\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654641971265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,10 @@\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n                 print(\"À epspera de resposta...\")\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(data.decode())\r\n+            except Exception as e:\r\n+                print(e)\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654641978628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,10 +75,12 @@\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n                 print(\"À epspera de resposta...\")\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(data.decode())\r\n+                dont = 1\r\n             except Exception as e:\r\n                 print(e)\r\n+        \r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654642392753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,16 +38,16 @@\n         data = data.decode()\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n-            self.socket.sendto(\"gameStart-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+            self.socket.sendto(\"gameStartack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 self.gameOptions = pickle.loads(data)\r\n-                self.socket.sendto(\"gameOptions-ack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+                self.socket.sendto(\"gameOptionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n"
                },
                {
                    "date": 1654642488084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n                 print(\"À epspera de resposta...\")\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(data.decode())\r\n-                dont = 1\r\n+                done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         \r\n \r\n"
                },
                {
                    "date": 1654642493973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,8 @@\n                     sel = input(\"Selecione a opcao: \")\r\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n-        print(\"Jogo Terminado\")\r\n-        \r\n         done = 0\r\n         self.socket.settimeout(3)\r\n         while not done:\r\n             try:\r\n"
                },
                {
                    "date": 1654642501403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         done = 0\r\n-        self.socket.settimeout(3)\r\n+        self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n                 print(\"À epspera de resposta...\")\r\n"
                },
                {
                    "date": 1654642533333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,11 @@\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n                     pl = Player.Player(option, self.gameSolutions[path])\r\n+                    pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n+                    pl.join()\r\n                     endTime = time.time()\r\n                     time = endTime - startTime\r\n                     myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n         done = 0\r\n"
                },
                {
                    "date": 1654642555439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n-                print(\"À epspera de resposta...\")\r\n+                print(\"À espera de resposta...\")\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(data.decode())\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654642637930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,8 @@\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n-        print(\"A iniciar jogo...\")\r\n         self.game()\r\n     \r\n     def game(self):\r\n         myGame = dict()\r\n"
                },
                {
                    "date": 1654642645562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n         print(\"Informacoes de jogo recebidas\")\r\n         self.game()\r\n     \r\n     def game(self):\r\n+        print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n"
                },
                {
                    "date": 1654643058602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,19 @@\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n+        print(\"A espera das solucoes...\")\r\n+        done = 0\r\n+        while not done:\r\n+            try :\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n+                self.gameSolutions = pickle.loads(data)\r\n+                self.socket.sendto(\"gameSolutionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+                done = 1\r\n+            except Exception as e:\r\n+                print(e)\r\n+        print(\"Solucoes recebidas\")\r\n         self.game()\r\n     \r\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n"
                },
                {
                    "date": 1654643140067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n+        print(self.gameSolutions)\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n"
                },
                {
                    "date": 1654643313430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,10 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         print(self.gameSolutions)\r\n+        print(\"MENU\\n\\n\\n\\n\")\r\n+        print(self.gameMenu)\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n"
                },
                {
                    "date": 1654643362729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameOptions = pickle.loads(data)\r\n+                self.gameMenu = pickle.loads(data)\r\n                 self.socket.sendto(\"gameOptionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n"
                },
                {
                    "date": 1654643469943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,10 @@\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n-                    time = endTime - startTime\r\n-                    myGame[option] = {\"answer\" : sel, \"time\" : time}\r\n+                    finaltime = endTime - startTime\r\n+                    myGame[option] = {\"answer\" : sel, \"time\" : finaltime}\r\n         done = 0\r\n         self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n"
                },
                {
                    "date": 1654643487609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,10 @@\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n-                    finaltime = endTime - startTime\r\n-                    myGame[option] = {\"answer\" : sel, \"time\" : finaltime}\r\n+                    finalTime = endTime - startTime\r\n+                    myGame[option] = {\"answer\" : sel, \"time\" : finalTime}\r\n         done = 0\r\n         self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n"
                },
                {
                    "date": 1654643503727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n-                    pl = Player.Player(option, self.gameSolutions[path])\r\n+                    pl = Player.Player(self.gameSolutions[path])\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654643531321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n+                    print(self.gameSolutions[path])\r\n                     pl = Player.Player(self.gameSolutions[path])\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654643552682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n-                    print(self.gameSolutions[path])\r\n+                    print(self.gameSolutions[\"filePath\"])\r\n                     pl = Player.Player(self.gameSolutions[path])\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654643578050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,16 +67,13 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        print(self.gameSolutions)\r\n-        print(\"MENU\\n\\n\\n\\n\")\r\n-        print(self.gameMenu)\r\n         for path in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     print(option)\r\n-                    print(self.gameSolutions[\"filePath\"])\r\n+                    print(self.gameSolutions)\r\n                     pl = Player.Player(self.gameSolutions[path])\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654643626549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,12 +67,12 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        for path in self.gameSolutions:\r\n+        for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n-                    print(option)\r\n+                    music = self.gameSolutions[entry][\"filePath\"]\r\n                     print(self.gameSolutions)\r\n                     pl = Player.Player(self.gameSolutions[path])\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n"
                },
                {
                    "date": 1654643640314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,11 @@\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n+                    print(music)\r\n                     print(self.gameSolutions)\r\n-                    pl = Player.Player(self.gameSolutions[path])\r\n+                    pl = Player.Player(music)\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654643675842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,8 @@\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     print(music)\r\n-                    print(self.gameSolutions)\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654645082086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     print(music)\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n+                    os.system('cls')\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645089772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, sys, Player, pickle, time\r\n+import socket, json, sys, Player, pickle, time, o\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n"
                },
                {
                    "date": 1654645252091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, sys, Player, pickle, time, o\r\n+import socket, json, sys, Player, pickle, time, os\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n@@ -74,9 +74,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     print(music)\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n-                    os.system('cls')\r\n+                    os.system('clear')\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645289996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,12 @@\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n-                    print(music)\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n+                    print(option)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645314191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n-                    print(option)\r\n+                    print(option.keys())\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645417478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n-                    print(option.keys())\r\n+                    print(self.gameMenu)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645462840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n+        self.gameOptions = dict(self.gameOptions)\r\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n"
                },
                {
                    "date": 1654645478518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n-                    print(self.gameMenu)\r\n+                    print(entry)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645497071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        self.gameOptions = dict(self.gameOptions)\r\n+        self.gameMenu = dict(self.Menu)\r\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n"
                },
                {
                    "date": 1654645531238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,16 +67,17 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        self.gameMenu = dict(self.Menu)\r\n+        self.gameMenu = dict(self.gameMenu)\r\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n+                    print(music)\r\n                     print(entry)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654645543309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(music)\r\n-                    print(entry)\r\n+                    \r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645571764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n-                    print(music)\r\n+                    print(option.values())\r\n                     \r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654645605923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        self.gameMenu = dict(self.gameMenu)\r\n+        self.gameMenu = json.loads(self.gameMenu)\r\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n"
                },
                {
                    "date": 1654645636514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        self.gameMenu = json.loads(self.gameMenu)\r\n+        self.gameMenu\r\n         for entry in self.gameSolutions:\r\n                 for option in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n"
                },
                {
                    "date": 1654645646436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n-                    print(option.values())\r\n+                    print(option)\r\n                     \r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654645660360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,10 @@\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n+                    print(self.gameMenu)\r\n+                    print(type(self.gameMenu))\r\n                     print(option)\r\n                     \r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654645707175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,11 +76,10 @@\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n-                    print(type(self.gameMenu))\r\n-                    print(option)\r\n-                    \r\n+                    for song in option:\r\n+                        print(type(self.gameMenu))\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645714082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n                     for song in option:\r\n-                        print(type(self.gameMenu))\r\n+                        print(song)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654645771605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n                     for song in option:\r\n-                        print(song)\r\n+                        print(song[\"artist\"] + \" - \" + song[\"title\"])\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654646642246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,9 @@\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n+                    option = json.loads(option)\r\n                     for song in option:\r\n                         print(song[\"artist\"] + \" - \" + song[\"title\"])\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654646671265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,8 @@\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n-                    option = json.loads(option)\r\n                     for song in option:\r\n                         print(song[\"artist\"] + \" - \" + song[\"title\"])\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n"
                },
                {
                    "date": 1654646732772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,17 +69,18 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         self.gameMenu\r\n         for entry in self.gameSolutions:\r\n-                for option in self.gameMenu:\r\n+                for round in self.gameMenu:\r\n                     startTime = time.time()\r\n                     music = self.gameSolutions[entry][\"filePath\"]\r\n                     pl = Player.Player(music)\r\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n-                    for song in option:\r\n-                        print(song[\"artist\"] + \" - \" + song[\"title\"])\r\n+                    for songs in round:\r\n+                        for song in songs:\r\n+                            print(song)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654646750457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n                     for songs in round:\r\n                         for song in songs:\r\n-                            print(song)\r\n+                            print(song.values())\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654646770812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                     pl.start()\r\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n                     for songs in round:\r\n-                        for song in songs:\r\n+                        for song in songs[\"title\"]:\r\n                             print(song.values())\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n"
                },
                {
                    "date": 1654646780332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                     os.system('clear')\r\n                     print(self.gameMenu)\r\n                     for songs in round:\r\n                         for song in songs[\"title\"]:\r\n-                            print(song.values())\r\n+                            print(song)\r\n                     sel = input(\"Selecione a opcao: \")\r\n                     pl.join()\r\n                     endTime = time.time()\r\n                     finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1654646917669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,25 +68,15 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         self.gameMenu\r\n-        for entry in self.gameSolutions:\r\n-                for round in self.gameMenu:\r\n-                    startTime = time.time()\r\n-                    music = self.gameSolutions[entry][\"filePath\"]\r\n-                    pl = Player.Player(music)\r\n-                    pl.start()\r\n-                    os.system('clear')\r\n-                    print(self.gameMenu)\r\n-                    for songs in round:\r\n-                        for song in songs[\"title\"]:\r\n-                            print(song)\r\n-                    sel = input(\"Selecione a opcao: \")\r\n-                    pl.join()\r\n-                    endTime = time.time()\r\n-                    finalTime = endTime - startTime\r\n-                    myGame[option] = {\"answer\" : sel, \"time\" : finalTime}\r\n-        done = 0\r\n+        for i in range(len(self.gameMenu)):\r\n+            round = self.gameMenu[str(i)]\r\n+            for song in round:\r\n+                print(song[\"tittle\"])\r\n+        \r\n+        \r\n+        \r\n         self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n"
                },
                {
                    "date": 1654646997363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,12 @@\n         self.gameMenu\r\n         for i in range(len(self.gameMenu)):\r\n             round = self.gameMenu[str(i)]\r\n             for song in round:\r\n-                print(song[\"tittle\"])\r\n+                print(song[\"title\"])\r\n         \r\n+     #ITERACAO , KEYS PASSAM A INDICES!   \r\n         \r\n-        \r\n         self.socket.settimeout(None)\r\n         while not done:\r\n             try:\r\n                 self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n"
                },
                {
                    "date": 1654716907324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,27 +67,10 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        self.gameMenu\r\n-        for i in range(len(self.gameMenu)):\r\n-            round = self.gameMenu[str(i)]\r\n-            for song in round:\r\n-                print(song[\"title\"])\r\n+        pprint.pprint(self.gameMenu)\r\n         \r\n-     #ITERACAO , KEYS PASSAM A INDICES!   \r\n-        \r\n-        self.socket.settimeout(None)\r\n-        while not done:\r\n-            try:\r\n-                self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n-                print(\"À espera de resposta...\")\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                print(data.decode())\r\n-                done = 1\r\n-            except Exception as e:\r\n-                print(e)\r\n-        \r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654716913197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, sys, Player, pickle, time, os\r\n+import socket, json, sys, Player, pickle, time, os, pprint\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n"
                },
                {
                    "date": 1654717500383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,11 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        pprint.pprint(self.gameMenu)\r\n+        for round in self.gameMenu:\r\n+            for option in round:\r\n+                pprint.pprint(self.gameMenu)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654718783674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu:\r\n             for option in round:\r\n-                pprint.pprint(self.gameMenu)\r\n+                pprint.pprint(option)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654718800140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu:\r\n             for option in round:\r\n-                pprint.pprint(option)\r\n+                pprint.pprint(option[\"title\"])\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654718846523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,13 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        for round in self.gameMenu:\r\n-            for option in round:\r\n-                pprint.pprint(option[\"title\"])\r\n+        #Iterate through the self.gameMenu dictionary, which contains the options for each round, and print each song title + song artist\r\n+        for key in self.gameMenu:\r\n+            print(\"\\n\" + key + \":\")\r\n+            for song in self.gameMenu[key]:\r\n+                print(song['title'] + \" - \" + song['artist'])\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654718977089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,12 +68,10 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         #Iterate through the self.gameMenu dictionary, which contains the options for each round, and print each song title + song artist\r\n-        for key in self.gameMenu:\r\n-            print(\"\\n\" + key + \":\")\r\n-            for song in self.gameMenu[key]:\r\n-                print(song['title'] + \" - \" + song['artist'])\r\n+        for key, value in self.gameMenu.items():\r\n+            print(key + \": \" + value[0] + \" - \" + value[1])\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719001251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         #Iterate through the self.gameMenu dictionary, which contains the options for each round, and print each song title + song artist\r\n         for key, value in self.gameMenu.items():\r\n-            print(key + \": \" + value[0] + \" - \" + value[1])\r\n+            print(key + \": \" + value)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719119374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,10 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n-        #Iterate through the self.gameMenu dictionary, which contains the options for each round, and print each song title + song artist\r\n-        for key, value in self.gameMenu.items():\r\n-            print(key + \": \" + value)\r\n+        for round in self.gameMenu.values():\r\n+            print(round)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719145029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,10 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n-            print(round)\r\n+            for song in round:\r\n+                print(song)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719154788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n-            for song in round:\r\n+            for song in round.values():\r\n                 print(song)\r\n         \r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654719197353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n             for song in round.values():\r\n-                print(song)\r\n+                pprint.pprint(song)\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719232341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n             for song in round.values():\r\n-                pprint.pprint(song)\r\n+                print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n         \r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719463172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,11 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n             for song in round.values():\r\n+                os.system(\"clear\")\r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-        \r\n+                print(self.gameSolutions)\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654719486174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n         for round in self.gameMenu.values():\r\n             for song in round.values():\r\n                 os.system(\"clear\")\r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                input(\"Escolha uma opção:\")\r\n                 print(self.gameSolutions)\r\n \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1654719501098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,12 +69,13 @@\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n             for song in round.values():\r\n-                os.system(\"clear\")\r\n+                \r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 input(\"Escolha uma opção:\")\r\n                 print(self.gameSolutions)\r\n+            os.system(\"clear\")\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654719516083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,14 +68,14 @@\n         print(\"A iniciar jogo\")\r\n         myGame = dict()\r\n         self.socket.settimeout(None)\r\n         for round in self.gameMenu.values():\r\n+            os.system(\"clear\")\r\n             for song in round.values():\r\n                 \r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 input(\"Escolha uma opção:\")\r\n                 print(self.gameSolutions)\r\n-            os.system(\"clear\")\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654719544663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,11 @@\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 \r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                input(\"Escolha uma opção:\")\r\n-                print(self.gameSolutions)\r\n+                \r\n+            input(\"Escolha uma opção:\")\r\n+            print(self.gameSolutions)\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654719827233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,14 +65,15 @@\n         self.game()\r\n     \r\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n-        myGame = dict()\r\n+        myGame = []\r\n         self.socket.settimeout(None)\r\n+        i = 0\r\n         for round in self.gameMenu.values():\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n-                \r\n+    \r\n                 print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 \r\n             input(\"Escolha uma opção:\")\r\n             print(self.gameSolutions)\r\n"
                },
                {
                    "date": 1654720067766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,16 @@\n         self.socket.settimeout(None)\r\n         i = 0\r\n         for round in self.gameMenu.values():\r\n             os.system(\"clear\")\r\n+            tmpSongs = []\r\n             for song in round.values():\r\n-    \r\n-                print(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                \r\n-            input(\"Escolha uma opção:\")\r\n-            print(self.gameSolutions)\r\n+                tmpSongs.append(song[\"tittle\"] + \" - \" + song[\"artist\"])\r\n+                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                i+=1\r\n+            option = input(\"Escolha uma opção:\")\r\n+            myGame.append(tmpSongs[int(option)])\r\n+        pprint.pprint(myGame)\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654720078862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for round in self.gameMenu.values():\r\n             os.system(\"clear\")\r\n             tmpSongs = []\r\n             for song in round.values():\r\n-                tmpSongs.append(song[\"tittle\"] + \" - \" + song[\"artist\"])\r\n+                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 i+=1\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n"
                },
                {
                    "date": 1654720093573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,11 @@\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n-        i = 0\r\n+        \r\n         for round in self.gameMenu.values():\r\n+            i = 0\r\n             os.system(\"clear\")\r\n             tmpSongs = []\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n"
                },
                {
                    "date": 1654720171078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n                 i+=1\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n+        pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1654720252592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,17 +69,19 @@\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n         for round in self.gameMenu.values():\r\n-            i = 0\r\n-            os.system(\"clear\")\r\n-            tmpSongs = []\r\n-            for song in round.values():\r\n-                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                i+=1\r\n-            option = input(\"Escolha uma opção:\")\r\n-            myGame.append(tmpSongs[int(option)])\r\n+            for c in self.gameSolutions.values():\r\n+                i = 0\r\n+                os.system(\"clear\")\r\n+                tmpSongs = []\r\n+                for song in round.values():\r\n+                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    i+=1\r\n+                option = input(\"Escolha uma opção:\")\r\n+                p = Player.Player(c[\"filePath\"])\r\n+                myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654720266088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,11 @@\n                 for song in round.values():\r\n                     tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n+                p = Player.Player(c[\"filePath\"])\r\n+                p.start()\r\n                 option = input(\"Escolha uma opção:\")\r\n-                p = Player.Player(c[\"filePath\"])\r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654720304582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,16 +71,18 @@\n         \r\n         for round in self.gameMenu.values():\r\n             for c in self.gameSolutions.values():\r\n                 i = 0\r\n+                \r\n+                tmpSongs = []\r\n+                p = Player.Player(c[\"filePath\"])\r\n+                p.start()\r\n                 os.system(\"clear\")\r\n-                tmpSongs = []\r\n                 for song in round.values():\r\n                     tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n-                p = Player.Player(c[\"filePath\"])\r\n-                p.start()\r\n+                \r\n                 option = input(\"Escolha uma opção:\")\r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n"
                },
                {
                    "date": 1654720377472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n         \r\n         for round in self.gameMenu.values():\r\n             for c in self.gameSolutions.values():\r\n                 i = 0\r\n-                \r\n                 tmpSongs = []\r\n                 p = Player.Player(c[\"filePath\"])\r\n                 p.start()\r\n                 os.system(\"clear\")\r\n@@ -82,8 +81,9 @@\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n                 \r\n                 option = input(\"Escolha uma opção:\")\r\n+                p.terminate()\r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654720474627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n                 \r\n                 option = input(\"Escolha uma opção:\")\r\n-                p.terminate()\r\n+                p.stopThread()\r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654720532136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,17 +73,17 @@\n             for c in self.gameSolutions.values():\r\n                 i = 0\r\n                 tmpSongs = []\r\n                 p = Player.Player(c[\"filePath\"])\r\n+                p.stopThread()\r\n                 p.start()\r\n                 os.system(\"clear\")\r\n                 for song in round.values():\r\n                     tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n-                \r\n                 option = input(\"Escolha uma opção:\")\r\n-                p.stopThread()\r\n+            \r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654720568433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,15 +76,15 @@\n                 p = Player.Player(c[\"filePath\"])\r\n                 p.stopThread()\r\n                 p.start()\r\n                 os.system(\"clear\")\r\n-                for song in round.values():\r\n-                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    i+=1\r\n-                option = input(\"Escolha uma opção:\")\r\n+            for song in round.values():\r\n+                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                i+=1\r\n+            option = input(\"Escolha uma opção:\")\r\n             \r\n-                myGame.append(tmpSongs[int(option)])\r\n+            myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654720585249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,18 +73,18 @@\n             for c in self.gameSolutions.values():\r\n                 i = 0\r\n                 tmpSongs = []\r\n                 p = Player.Player(c[\"filePath\"])\r\n-                p.stopThread()\r\n                 p.start()\r\n                 os.system(\"clear\")\r\n-            for song in round.values():\r\n-                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                i+=1\r\n-            option = input(\"Escolha uma opção:\")\r\n-            \r\n-            myGame.append(tmpSongs[int(option)])\r\n+                for song in round.values():\r\n+                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    i+=1\r\n+                option = input(\"Escolha uma opção:\")\r\n+                p.stopThread()\r\n+                \r\n+                myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654720622565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,10 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for round in self.gameMenu.values():\r\n-            for c in self.gameSolutions.values():\r\n+        for c in self.gameSolutions.values():\r\n+            for round in self.gameMenu.values():\r\n                 i = 0\r\n                 tmpSongs = []\r\n                 p = Player.Player(c[\"filePath\"])\r\n                 p.start()\r\n@@ -81,9 +81,8 @@\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n                 option = input(\"Escolha uma opção:\")\r\n                 p.stopThread()\r\n-                \r\n                 myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654720804702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,22 +68,21 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for c in self.gameSolutions.values():\r\n-            for round in self.gameMenu.values():\r\n-                i = 0\r\n-                tmpSongs = []\r\n-                p = Player.Player(c[\"filePath\"])\r\n-                p.start()\r\n-                os.system(\"clear\")\r\n-                for song in round.values():\r\n-                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    i+=1\r\n-                option = input(\"Escolha uma opção:\")\r\n-                p.stopThread()\r\n-                myGame.append(tmpSongs[int(option)])\r\n+        for round in self.gameMenu.values() and self.gameSolutions.values():\r\n+            i = 0\r\n+            tmpSongs = []\r\n+            p = Player.Player(c[\"filePath\"])\r\n+            p.start()\r\n+            os.system(\"clear\")\r\n+            for song in round.values():\r\n+                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                i+=1\r\n+            option = input(\"Escolha uma opção:\")\r\n+            p.stopThread()\r\n+            myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654720857513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for round in self.gameMenu.values() and self.gameSolutions.values():\r\n+        for round, c in zip(self.gameMenu.values(), self.gameSoltions().values())\r\n             i = 0\r\n             tmpSongs = []\r\n             p = Player.Player(c[\"filePath\"])\r\n             p.start()\r\n"
                },
                {
                    "date": 1654720869620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for round, c in zip(self.gameMenu.values(), self.gameSoltions().values())\r\n+        for (round, c) in zip(self.gameMenu.values(), self.gameSoltions().values()):\r\n             i = 0\r\n             tmpSongs = []\r\n             p = Player.Player(c[\"filePath\"])\r\n             p.start()\r\n"
                },
                {
                    "date": 1654720879644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for (round, c) in zip(self.gameMenu.values(), self.gameSoltions().values()):\r\n+        for (round, c) in zip(self.gameMenu.values(), self.gameSolutions().values()):\r\n             i = 0\r\n             tmpSongs = []\r\n             p = Player.Player(c[\"filePath\"])\r\n             p.start()\r\n"
                },
                {
                    "date": 1654720955277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for (round, c) in zip(self.gameMenu.values(), self.gameSolutions().values()):\r\n+        for (k,round),(x, c) in zip(self.gameMenu.values(), self.gameSolutions().values()):\r\n             i = 0\r\n             tmpSongs = []\r\n             p = Player.Player(c[\"filePath\"])\r\n             p.start()\r\n"
                },
                {
                    "date": 1654720977343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for (k,round),(x, c) in zip(self.gameMenu.values(), self.gameSolutions().values()):\r\n+        for (k,round),(x, c) in zip(self.gameMenu.items(), self.gameSolutions().items()):\r\n             i = 0\r\n             tmpSongs = []\r\n             p = Player.Player(c[\"filePath\"])\r\n             p.start()\r\n"
                },
                {
                    "date": 1654723525375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,21 +68,23 @@\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         self.socket.settimeout(None)\r\n         \r\n-        for (k,round),(x, c) in zip(self.gameMenu.items(), self.gameSolutions().items()):\r\n-            i = 0\r\n-            tmpSongs = []\r\n-            p = Player.Player(c[\"filePath\"])\r\n-            p.start()\r\n-            os.system(\"clear\")\r\n-            for song in round.values():\r\n-                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                i+=1\r\n-            option = input(\"Escolha uma opção:\")\r\n-            p.stopThread()\r\n-            myGame.append(tmpSongs[int(option)])\r\n+        for c in self.gameSolutions.values():\r\n+            for round in self.gameMenu.values():\r\n+          \r\n+                i = 0\r\n+                tmpSongs = []\r\n+                p = Player.Player(c[\"filePath\"])\r\n+                p.start()\r\n+                os.system(\"clear\")\r\n+                for song in round.values():\r\n+                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                    i+=1\r\n+                option = input(\"Escolha uma opção:\")\r\n+                p.stopThread()\r\n+                myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654723554924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,21 +70,19 @@\n         self.socket.settimeout(None)\r\n         \r\n         for c in self.gameSolutions.values():\r\n             for round in self.gameMenu.values():\r\n-          \r\n                 i = 0\r\n                 tmpSongs = []\r\n-                p = Player.Player(c[\"filePath\"])\r\n-                p.start()\r\n-                os.system(\"clear\")\r\n                 for song in round.values():\r\n                     tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n-                option = input(\"Escolha uma opção:\")\r\n-                p.stopThread()\r\n-                myGame.append(tmpSongs[int(option)])\r\n+            p = Player.Player(c[\"filePath\"])\r\n+            p.start()\r\n+            os.system(\"clear\")\r\n+            option = input(\"Escolha uma opção:\")\r\n+            myGame.append(tmpSongs[int(option)])\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654724841135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,9 @@\n             p.start()\r\n             os.system(\"clear\")\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n+            p.stopThread()\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654725045705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,24 +66,29 @@\n     \r\n     def game(self):\r\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n+        paths = []\r\n         self.socket.settimeout(None)\r\n+        for entry in self.gameSolutions.values():\r\n+            paths.append(entry[\"filePath\"])\r\n         \r\n+        \r\n+        \r\n         for c in self.gameSolutions.values():\r\n             for round in self.gameMenu.values():\r\n                 i = 0\r\n                 tmpSongs = []\r\n                 for song in round.values():\r\n                     tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                     i+=1\r\n-            p = Player.Player(c[\"filePath\"])\r\n-            p.start()\r\n-            os.system(\"clear\")\r\n-            option = input(\"Escolha uma opção:\")\r\n-            myGame.append(tmpSongs[int(option)])\r\n-            p.stopThread()\r\n+                p = Player.Player(c[\"filePath\"])\r\n+                p.start()\r\n+                os.system(\"clear\")\r\n+                option = input(\"Escolha uma opção:\")\r\n+                myGame.append(tmpSongs[int(option)])\r\n+                p.stopThread()\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654725097106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,25 +70,22 @@\n         paths = []\r\n         self.socket.settimeout(None)\r\n         for entry in self.gameSolutions.values():\r\n             paths.append(entry[\"filePath\"])\r\n-        \r\n-        \r\n-        \r\n-        for c in self.gameSolutions.values():\r\n-            for round in self.gameMenu.values():\r\n-                i = 0\r\n-                tmpSongs = []\r\n-                for song in round.values():\r\n-                    tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                    i+=1\r\n-                p = Player.Player(c[\"filePath\"])\r\n-                p.start()\r\n-                os.system(\"clear\")\r\n-                option = input(\"Escolha uma opção:\")\r\n-                myGame.append(tmpSongs[int(option)])\r\n-                p.stopThread()\r\n+        for round in self.gameMenu.values():\r\n+            i = 0\r\n+            tmpSongs = []\r\n+            p = Player.Player(paths[i])\r\n+            p.start()\r\n+            os.system(\"clear\")\r\n+            for song in round.values():\r\n+                tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                i+=1\r\n+            p.stopThread()\r\n+            option = input(\"Escolha uma opção:\")\r\n+            myGame.append(tmpSongs[int(option)])\r\n+            p.stopThread()\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654725105974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,8 @@\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 i+=1\r\n-            p.stopThread()\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654725140601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                i+=1\r\n+            i+=1\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654725207684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,11 @@\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             i+=1\r\n+            print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n+            \r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n"
                },
                {
                    "date": 1654725252260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,14 +79,13 @@\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-            i+=1\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n-            \r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n+            i+=1\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654725311680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n         paths = []\r\n         self.socket.settimeout(None)\r\n         for entry in self.gameSolutions.values():\r\n             paths.append(entry[\"filePath\"])\r\n-        for round in self.gameMenu.values():\r\n-            i = 0\r\n+        i = 0\r\n+        for round in self.gameMenu.values():    \r\n             tmpSongs = []\r\n             p = Player.Player(paths[i])\r\n             p.start()\r\n             os.system(\"clear\")\r\n"
                },
                {
                    "date": 1654725328536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,16 +71,17 @@\n         self.socket.settimeout(None)\r\n         for entry in self.gameSolutions.values():\r\n             paths.append(entry[\"filePath\"])\r\n         i = 0\r\n-        for round in self.gameMenu.values():    \r\n+        for round in self.gameMenu.values():\r\n+            j = 0    \r\n             tmpSongs = []\r\n             p = Player.Player(paths[i])\r\n             p.start()\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n-                print(str(i) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n+                print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n"
                },
                {
                    "date": 1654725422193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n+            p.join()\r\n             i+=1\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654725608049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,9 @@\n             myGame.append(tmpSongs[int(option)])\r\n             p.stopThread()\r\n             p.join()\r\n             i+=1\r\n+            j+=1\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654725769941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n-            p.stopThread()\r\n+            p.stop()\r\n             p.join()\r\n             i+=1\r\n             j+=1\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654726199051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n         i = 0\r\n         for round in self.gameMenu.values():\r\n             j = 0    \r\n             tmpSongs = []\r\n+            stopThreads = False\r\n             p = Player.Player(paths[i])\r\n             p.start()\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n@@ -83,10 +84,9 @@\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n-            p.stop()\r\n-            p.join()\r\n+            stopThreads = True\r\n             i+=1\r\n             j+=1\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n"
                },
                {
                    "date": 1654726228122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,11 @@\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Solucoes recebidas\")\r\n         self.game()\r\n-    \r\n+    stopThreads = False\r\n     def game(self):\r\n+        global stopThreads\r\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         paths = []\r\n         self.socket.settimeout(None)\r\n@@ -74,9 +75,8 @@\n         i = 0\r\n         for round in self.gameMenu.values():\r\n             j = 0    \r\n             tmpSongs = []\r\n-            stopThreads = False\r\n             p = Player.Player(paths[i])\r\n             p.start()\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n"
                },
                {
                    "date": 1654726241181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n+            p.join()\r\n             i+=1\r\n             j+=1\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n"
                },
                {
                    "date": 1654726312856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n+            p.stopThread()\r\n             p.join()\r\n             i+=1\r\n             j+=1\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654726409572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,9 @@\n             p.stopThread()\r\n             p.join()\r\n             i+=1\r\n             j+=1\r\n+            time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n def main():\r\n"
                },
                {
                    "date": 1654781810437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import socket, json, sys, Player, pickle, time, os, pprint\r\n+import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time\r\n \r\n serverAddr = \"\"\r\n \r\n class gameClient():\r\n@@ -93,8 +93,17 @@\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n"
                },
                {
                    "date": 1654782017601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,22 @@\n-import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time\r\n+import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time, playsound\r\n \r\n+from multiprocessing import Process\r\n+\r\n serverAddr = \"\"\r\n \r\n+\r\n+\r\n+\r\n+stopMusic = False\r\n+\r\n+def playMusic(file):\r\n+    playsound(file)\r\n+\r\n+\r\n+\r\n+\r\n+\r\n class gameClient():\r\n     def __init__(self):\r\n         self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n@@ -28,8 +42,12 @@\n             print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n         self.gameQueue()\r\n         \r\n         \r\n+        \r\n+        \r\n+        \r\n+        \r\n     def gameQueue(self):\r\n         \r\n         print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n@@ -75,20 +93,18 @@\n         i = 0\r\n         for round in self.gameMenu.values():\r\n             j = 0    \r\n             tmpSongs = []\r\n-            p = Player.Player(paths[i])\r\n-            p.start()\r\n+            p = Process(name=\"playsound\", target=playMusic, args=(paths[i],))\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n-            p.stopThread()\r\n-            p.join()\r\n+           \r\n             i+=1\r\n             j+=1\r\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654782029963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,17 +94,18 @@\n         for round in self.gameMenu.values():\r\n             j = 0    \r\n             tmpSongs = []\r\n             p = Process(name=\"playsound\", target=playMusic, args=(paths[i],))\r\n+            p.start()\r\n             os.system(\"clear\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n-           \r\n+            p.terminate\r\n             i+=1\r\n             j+=1\r\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654782200857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n-import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time, playsound\r\n+import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time, \r\n \r\n from multiprocessing import Process\r\n+from playsound import playsound\r\n \r\n serverAddr = \"\"\r\n \r\n \r\n@@ -103,9 +104,9 @@\n             print(paths[i])\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n-            p.terminate\r\n+            p.terminate()\r\n             i+=1\r\n             j+=1\r\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n"
                },
                {
                    "date": 1654782214712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n-import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time, \r\n+import socket, json, sys, Player, pickle, time, os, pprint, threading, subprocess, time, playsound \r\n \r\n from multiprocessing import Process\r\n-from playsound import playsound\r\n \r\n+\r\n serverAddr = \"\"\r\n \r\n \r\n \r\n \r\n stopMusic = False\r\n \r\n def playMusic(file):\r\n-    playsound(file)\r\n+    playsound.playsound(file)\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1654782379733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n             j = 0    \r\n             tmpSongs = []\r\n             p = Process(name=\"playsound\", target=playMusic, args=(paths[i],))\r\n             p.start()\r\n-            os.system(\"clear\")\r\n+            print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n             print(paths[i])\r\n"
                },
                {
                    "date": 1654788433454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,15 +100,14 @@\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n-            print(paths[i])\r\n+                j+=1\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n-            j+=1\r\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n         pprint.pprint(self.gameSolutions)\r\n \r\n"
                },
                {
                    "date": 1654788494509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,9 @@\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 j+=1\r\n+            print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n             p.terminate()\r\n"
                },
                {
                    "date": 1654789822211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,9 @@\n                 j+=1\r\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n+            print(myGame)\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n"
                },
                {
                    "date": 1654789833666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n                 j+=1\r\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n-            print(myGame)\r\n+            pprint.pprint(myGame)\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n"
                },
                {
                    "date": 1654789876332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,15 +104,13 @@\n                 j+=1\r\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             myGame.append(tmpSongs[int(option)])\r\n-            pprint.pprint(myGame)\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n         pprint.pprint(myGame)\r\n-        pprint.pprint(self.gameSolutions)\r\n \r\n \r\n \r\n \r\n@@ -121,8 +119,9 @@\n \r\n \r\n \r\n \r\n+\r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n"
                },
                {
                    "date": 1654789932820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,14 +97,17 @@\n             tmpSongs = []\r\n             p = Process(name=\"playsound\", target=playMusic, args=(paths[i],))\r\n             p.start()\r\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n+            startTime = time.time()\r\n             for song in round.values():\r\n                 tmpSongs.append(song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 print(str(j) + \" : \" + song[\"title\"] + \" - \" + song[\"artist\"])\r\n                 j+=1\r\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n+            endTime = time.time()\r\n+            finalTime = endTime - startTime\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n"
                },
                {
                    "date": 1654789950537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             endTime = time.time()\r\n             finalTime = endTime - startTime\r\n+            res = option + \" - \" + str(finalTime)\r\n             myGame.append(tmpSongs[int(option)])\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n"
                },
                {
                    "date": 1654789987719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,10 +106,9 @@\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             endTime = time.time()\r\n             finalTime = endTime - startTime\r\n-            res = option + \" - \" + str(finalTime)\r\n-            myGame.append(tmpSongs[int(option)])\r\n+            myGame.append(tmpSongs[int(option)] + \" - \" + str(finalTime))\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n"
                },
                {
                    "date": 1654790673380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,10 @@\n         global stopThreads\r\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n         paths = []\r\n+        timeArr = []\r\n+        results = dict()\r\n         self.socket.settimeout(None)\r\n         for entry in self.gameSolutions.values():\r\n             paths.append(entry[\"filePath\"])\r\n         i = 0\r\n@@ -106,14 +108,20 @@\n             print(\"\\n\\n\")\r\n             option = input(\"Escolha uma opção:\")\r\n             endTime = time.time()\r\n             finalTime = endTime - startTime\r\n-            myGame.append(tmpSongs[int(option)] + \" - \" + str(finalTime))\r\n+            myGame.append(tmpSongs[int(option)])\r\n+            timeArr = timeArr + [finalTime]\r\n             stopThreads = True\r\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n-        pprint.pprint(myGame)\r\n+        for i in range(len(myGame)):\r\n+            results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}            \r\n+        ''' self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n+        data, addr = self.socket.recvfrom(self.buff) '''\r\n+        \r\n+        pprint.pprint(results)\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1654790867061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,10 @@\n             i+=1\r\n             time.sleep(0.5)\r\n         for i in range(len(myGame)):\r\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}            \r\n-        ''' self.socket.sendto(pickle.dumps(myGame), (serverAddr, self.gamePort))\r\n-        data, addr = self.socket.recvfrom(self.buff) '''\r\n+        self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n         \r\n         pprint.pprint(results)\r\n \r\n \r\n"
                },
                {
                    "date": 1654790949049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,14 @@\n         for i in range(len(myGame)):\r\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n+        if data.decode() == \"gameResultsack\":\r\n+            print(\"Confirmação de envio de jogada!\")\r\n+        else:\r\n+            print(\"error\")\r\n+        print(\"À espera dos resultados finais...\")\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n         \r\n         pprint.pprint(results)\r\n \r\n \r\n"
                },
                {
                    "date": 1654790962396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n         for i in range(len(myGame)):\r\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n-        if data.decode() == \"gameResultsack\":\r\n+        if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n         else:\r\n             print(\"error\")\r\n         print(\"À espera dos resultados finais...\")\r\n"
                },
                {
                    "date": 1654791024736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,10 @@\n             p.terminate()\r\n             i+=1\r\n             time.sleep(0.5)\r\n         for i in range(len(myGame)):\r\n-            results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}            \r\n+            results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}\r\n+        print(\"\\x1b[2J\\x1b[H\",end=\"\")            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n"
                },
                {
                    "date": 1654791052191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,9 @@\n         for i in range(len(myGame)):\r\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n+        time.sleep(0.1)\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n         else:\r\n"
                },
                {
                    "date": 1654812089429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,20 +29,24 @@\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.socket.settimeout(3)\r\n+        self.aSocket.bind(('', self.clientPort))\r\n         \r\n     def auth(self):\r\n-        print(\"In auth...\")\r\n-        print(\"serverAddr\" + serverAddr)\r\n-        self.aSocket.bind(('', self.clientPort))\r\n+        \r\n         #send hello-hostname message to server\r\n         self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n         print(\"Mensagem enviada: hello-\" + self.hostName)\r\n-        data,addr = self.aSocket.recvfrom(self.buff)\r\n-        if data.decode() == \"hello-ack\":\r\n-            print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n-        self.gameQueue()\r\n+        while True:\r\n+            try:\r\n+                data,addr = self.aSocket.recvfrom(self.buff)\r\n+                if data.decode() == \"hello-ack\":\r\n+                    print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n+                self.gameQueue()\r\n+            except socket.timeout:\r\n+                \r\n+                print(\"Timeout\")\r\n         \r\n         \r\n         \r\n         \r\n"
                },
                {
                    "date": 1654812245725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n-        self.socket.settimeout(3)\r\n+        self.socket.settimeout(None)\r\n         self.aSocket.bind(('', self.clientPort))\r\n         \r\n     def auth(self):\r\n         \r\n"
                },
                {
                    "date": 1654812729862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,9 @@\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         time.sleep(0.1)\r\n+        print(\"A espera dos oponentes terminarem o jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n         else:\r\n"
                },
                {
                    "date": 1654814137568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,10 @@\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameMenu = pickle.loads(data)\r\n+                d, addr = self.socket.recvfrom(self.buff)\r\n+                self.gameMenu = pickle.loads(d)\r\n                 self.socket.sendto(\"gameOptionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n"
                },
                {
                    "date": 1654814143941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n         print(\"A espera das solucoes...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n+                p, addr = self.socket.recvfrom(self.buff)\r\n                 self.gameSolutions = pickle.loads(data)\r\n                 self.socket.sendto(\"gameSolutionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654814149832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 p, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameSolutions = pickle.loads(data)\r\n+                self.gameSolutions = pickle.loads(p)\r\n                 self.socket.sendto(\"gameSolutionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n"
                },
                {
                    "date": 1654814339717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n+        print(\"received: \" + data)\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStartack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n"
                },
                {
                    "date": 1654814808063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,19 +58,18 @@\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n-        print(\"received: \" + data)\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto(\"gameStartack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n-                d, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameMenu = pickle.loads(d)\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n+                self.gameMenu = pickle.loads(data)\r\n                 self.socket.sendto(\"gameOptionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n@@ -78,10 +77,10 @@\n         print(\"A espera das solucoes...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n-                p, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameSolutions = pickle.loads(p)\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n+                self.gameSolutions = pickle.loads(data)\r\n                 self.socket.sendto(\"gameSolutionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n@@ -124,9 +123,9 @@\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         time.sleep(0.1)\r\n-        print(\"A espera dos oponentes terminarem o jogo...\")\r\n+        print(\"A espera dos jogadores terminarem o jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n         else:\r\n"
                },
                {
                    "date": 1654814834472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n+        self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT,1)\r\n         self.socket.settimeout(None)\r\n         self.aSocket.bind(('', self.clientPort))\r\n         \r\n     def auth(self):\r\n@@ -123,9 +124,9 @@\n             results[str(i)] = {\"song\":myGame[i], \"time\":timeArr[i]}\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")            \r\n         self.socket.sendto(pickle.dumps(results), (serverAddr, self.gamePort))\r\n         time.sleep(0.1)\r\n-        print(\"A espera dos jogadores terminarem o jogo...\")\r\n+        print(\"A espera dos oponentes terminarem o jogo...\")\r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         if data.decode() == \"gameEndAck\":\r\n             print(\"Confirmação de envio de jogada!\")\r\n         else:\r\n"
                },
                {
                    "date": 1654814862680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n         self.gameSolutions = dict()\r\n         self.gameMenu = dict()\r\n         self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n-        self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT,1)\r\n         self.socket.settimeout(None)\r\n         self.aSocket.bind(('', self.clientPort))\r\n         \r\n     def auth(self):\r\n"
                },
                {
                    "date": 1654815205037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n                 print(\"Timeout\")\r\n         \r\n         \r\n         \r\n+    \r\n         \r\n         \r\n         \r\n     def gameQueue(self):\r\n@@ -61,9 +62,9 @@\n         data = data.decode()\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n-            self.socket.sendto(\"gameStartack\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+            self.socket.sendto(\"gameStartack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n"
                },
                {
                    "date": 1654815282838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,16 +62,16 @@\n         data = data.decode()\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n-            self.socket.sendto(\"gameStartack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+            self.socket.sendto(\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 self.gameMenu = pickle.loads(data)\r\n-                self.socket.sendto(\"gameOptionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+                self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n"
                },
                {
                    "date": 1654815303223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         data = data.decode()\r\n         if data=='gameStart':\r\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n-            self.socket.sendto(\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n+            self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         done = 0\r\n         while not done:\r\n             try :\r\n"
                },
                {
                    "date": 1654815321850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 self.gameSolutions = pickle.loads(data)\r\n-                self.socket.sendto(\"gameSolutionsack-\".encode() + self.hostName.encode(), (serverAddr, self.gamePort))\r\n+                self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Solucoes recebidas\")\r\n"
                },
                {
                    "date": 1654815977426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n+                print(data.decode())\r\n                 self.gameSolutions = pickle.loads(data)\r\n                 self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654815982513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n-                print(data.decode())\r\n+                print(data)\r\n                 self.gameSolutions = pickle.loads(data)\r\n                 self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654815988128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n+                print(data)\r\n                 self.gameMenu = pickle.loads(data)\r\n                 self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654815999114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,10 @@\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Solucoes recebidas\")\r\n         self.game()\r\n-    stopThreads = False\r\n+\r\n+\r\n     def game(self):\r\n         global stopThreads\r\n         print(\"A iniciar jogo\")\r\n         myGame = []\r\n"
                },
                {
                    "date": 1654816133660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,16 +64,15 @@\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n-        done = 0\r\n-        while not done:\r\n+        while True:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(data)\r\n                 self.gameMenu = pickle.loads(data)\r\n                 self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-                done = 1\r\n+                break\r\n             except Exception as e:\r\n                 print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A espera das solucoes...\")\r\n"
                },
                {
                    "date": 1654816169909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         print(\"A espera de informacoes de jogo...\")\r\n         while True:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n-                print(data)\r\n+                print(\"FODASSE PARA ESTA MERDA\")\r\n                 self.gameMenu = pickle.loads(data)\r\n                 self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 break\r\n             except Exception as e:\r\n"
                },
                {
                    "date": 1654816342494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,10 @@\n         done = 0\r\n         while not done:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n-                print(data)\r\n                 self.gameSolutions = pickle.loads(data)\r\n+                pprint.pprint(self.gameSolutions)\r\n                 self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 done = 1\r\n             except Exception as e:\r\n                 print(e)\r\n"
                },
                {
                    "date": 1654816351985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(\"FODASSE PARA ESTA MERDA\")\r\n                 self.gameMenu = pickle.loads(data)\r\n+                pprint.pprint(self.gameMenu)\r\n                 self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 break\r\n             except Exception as e:\r\n                 print(e)\r\n"
                },
                {
                    "date": 1654816528030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,16 +57,22 @@\n         \r\n         print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n-        data, addr = self.socket.recvfrom(self.buff)\r\n-        data = data.decode()\r\n-        if data=='gameStart':\r\n-            var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n-            #send ack with ack-hostname\r\n-            self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-        print(\"A espera de informacoes de jogo...\")\r\n+        \r\n         while True:\r\n+            try:\r\n+                data, addr = self.socket.recvfrom(self.buff)\r\n+                data = data.decode()\r\n+                if data=='gameStart':\r\n+                    var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n+                    #send ack with ack-hostname\r\n+                    self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n+                print(\"A espera de informacoes de jogo...\")\r\n+                break;\r\n+            except: \r\n+                print(\"Timeout\")\r\n+        while True:\r\n             try :\r\n                 data, addr = self.socket.recvfrom(self.buff)\r\n                 print(\"FODASSE PARA ESTA MERDA\")\r\n                 self.gameMenu = pickle.loads(data)\r\n"
                },
                {
                    "date": 1654816535964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n                     var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n                     #send ack with ack-hostname\r\n                     self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n                 print(\"A espera de informacoes de jogo...\")\r\n-                break;\r\n+                break\r\n             except: \r\n                 print(\"Timeout\")\r\n         while True:\r\n             try :\r\n"
                },
                {
                    "date": 1654817547224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,42 +58,37 @@\n         print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n         self.socket.bind(('', self.gamePort))\r\n         \r\n-        while True:\r\n-            try:\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                data = data.decode()\r\n-                if data=='gameStart':\r\n-                    var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n-                    #send ack with ack-hostname\r\n-                    self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-                print(\"A espera de informacoes de jogo...\")\r\n-                break\r\n-            except: \r\n-                print(\"Timeout\")\r\n-        while True:\r\n-            try :\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                print(\"FODASSE PARA ESTA MERDA\")\r\n-                self.gameMenu = pickle.loads(data)\r\n-                pprint.pprint(self.gameMenu)\r\n-                self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-                break\r\n-            except Exception as e:\r\n-                print(e)\r\n+\r\n+        data, addr = self.socket.recvfrom(self.buff)\r\n+        data = data.decode()\r\n+        if data=='gameStart':\r\n+            var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n+            #send ack with ack-hostname\r\n+            self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n+        print(\"A espera de informacoes de jogo...\")\r\n+\r\n+        try :\r\n+            data, addr = self.socket.recvfrom(self.buff)\r\n+            print(\"FODASSE PARA ESTA MERDA\")\r\n+            self.gameMenu = pickle.loads(data)\r\n+            pprint.pprint(self.gameMenu)\r\n+            self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n+            break\r\n+        except Exception as e:\r\n+            print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A espera das solucoes...\")\r\n-        done = 0\r\n-        while not done:\r\n-            try :\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                self.gameSolutions = pickle.loads(data)\r\n-                pprint.pprint(self.gameSolutions)\r\n-                self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-                done = 1\r\n-            except Exception as e:\r\n-                print(e)\r\n+    \r\n+        try :\r\n+            data, addr = self.socket.recvfrom(self.buff)\r\n+            self.gameSolutions = pickle.loads(data)\r\n+            pprint.pprint(self.gameSolutions)\r\n+            self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n+            \r\n+        except Exception as e:\r\n+            print(e)\r\n         print(\"Solucoes recebidas\")\r\n         self.game()\r\n \r\n \r\n"
                },
                {
                    "date": 1654817573980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-            break\r\n+\r\n         except Exception as e:\r\n             print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A espera das solucoes...\")\r\n"
                },
                {
                    "date": 1654817583455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,9 @@\n             var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n-\r\n-        try :\r\n+        try:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n"
                },
                {
                    "date": 1654817590741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,8 @@\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n-\r\n         except Exception as e:\r\n             print(e)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A espera das solucoes...\")\r\n"
                },
                {
                    "date": 1654817662132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,8 @@\n \r\n         data, addr = self.socket.recvfrom(self.buff)\r\n         data = data.decode()\r\n         if data=='gameStart':\r\n-            var = input(\"Jogo Encontrado, pressione enter para continuar\")\r\n             #send ack with ack-hostname\r\n             self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         try:\r\n"
                },
                {
                    "date": 1654818118240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,11 @@\n             \r\n         except Exception as e:\r\n             print(e)\r\n         print(\"Solucoes recebidas\")\r\n+        \r\n+        pprint.pprint(self.gameSolutions)\r\n+        pprint.pprint(self.gameMenu)\r\n         self.game()\r\n \r\n \r\n     def game(self):\r\n"
                },
                {
                    "date": 1654818176647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,8 @@\n     \r\n         try :\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             self.gameSolutions = pickle.loads(data)\r\n-            pprint.pprint(self.gameSolutions)\r\n             self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n             \r\n         except Exception as e:\r\n             print(e)\r\n"
                },
                {
                    "date": 1654818210176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,9 @@\n         print(\"Solucoes recebidas\")\r\n         \r\n         pprint.pprint(self.gameSolutions)\r\n         pprint.pprint(self.gameMenu)\r\n+        input(\"Aperte enter para continuar...\")\r\n         self.game()\r\n \r\n \r\n     def game(self):\r\n"
                },
                {
                    "date": 1654818750866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n         if data=='gameStart':\r\n             #send ack with ack-hostname\r\n             self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n+        time.sleep(0.1)\r\n         try:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n"
                },
                {
                    "date": 1654818756102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         except Exception as e:\r\n             print(e)\r\n+        time.sleep(0.1)\r\n         print(\"Informacoes de jogo recebidas\")\r\n         print(\"A espera das solucoes...\")\r\n     \r\n         try :\r\n"
                },
                {
                    "date": 1654818762940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n             self.socket.sendto((\"gameSolutionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n             \r\n         except Exception as e:\r\n             print(e)\r\n+        time.sleep(0.1)\r\n         print(\"Solucoes recebidas\")\r\n         \r\n         pprint.pprint(self.gameSolutions)\r\n         pprint.pprint(self.gameMenu)\r\n"
                },
                {
                    "date": 1654819425148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,11 @@\n             self.socket.sendto((\"gameStartack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         print(\"A espera de informacoes de jogo...\")\r\n         time.sleep(0.1)\r\n         try:\r\n+            \r\n             data, addr = self.socket.recvfrom(self.buff)\r\n+            if data.decode() == \"gameOptions\":\r\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n"
                },
                {
                    "date": 1654821023973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n         time.sleep(0.1)\r\n         try:\r\n             \r\n             data, addr = self.socket.recvfrom(self.buff)\r\n-            if data.decode() == \"gameOptions\":\r\n             print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n"
                },
                {
                    "date": 1654821070266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n         time.sleep(0.1)\r\n         try:\r\n             \r\n             data, addr = self.socket.recvfrom(self.buff)\r\n-            print(\"FODASSE PARA ESTA MERDA\")\r\n             self.gameMenu = pickle.loads(data)\r\n             pprint.pprint(self.gameMenu)\r\n             self.socket.sendto((\"gameOptionsack-\" + self.hostName).encode(), (serverAddr, self.gamePort))\r\n         except Exception as e:\r\n"
                },
                {
                    "date": 1654821126538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,10 @@\n         \r\n         \r\n     \r\n         \r\n+    \r\n         \r\n-        \r\n     def gameQueue(self):\r\n         \r\n         print(\"in gameQueue\")\r\n         print(\"À espera de jogo....\")\r\n"
                }
            ],
            "date": 1654531288188,
            "name": "Commit-0",
            "content": "import socket, threading, json, random\r\n\r\nserverAddr = \"\"\r\n\r\nclass gameClient(threading.Thread):\r\n    def __init__(self):\r\n        self.socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\n        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n        self.buff = 2048\r\n        self.clientPort = 8080\r\n        self.gamePort = 8081\r\n        \r\n    def auth(self):\r\n        self.socket.bind('', self.clientPort)\r\n        #send hello-hostname message to server\r\n        self.socket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n        data,addr = self.socket.recvfrom(self.buff)\r\n        if data.split=='hello-ack-':\r\n            print(\"Conexao ao servidor no endereço\" + addr[0] + \":\" + addr[1] + \"bem sucedida\")\r\n            \r\n    def gameQueue(self):\r\n        print(\"À espera de jogo....\")\r\n        self.socket.bind('', self.clientPort)\r\n    \r\n    "
        }
    ]
}