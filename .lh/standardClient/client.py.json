{
    "sourceFile": "standardClient/client.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1655049130743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1655050124905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,9 @@\n         self.waitForWinner()\r\n      \r\n      \r\n     def sR(self):\r\n+        print(res)\r\n         res = self.results.replace(\"results\", \"\")\r\n         res = res[:-1]\r\n         res = re.split(r'-r[0-9]-', res)\r\n         print(\"res split \" + str(res))\r\n"
                },
                {
                    "date": 1655050154567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,10 +129,10 @@\n         self.waitForWinner()\r\n      \r\n      \r\n     def sR(self):\r\n+        res = self.results.replace(\"results\", \"\")\r\n         print(res)\r\n-        res = self.results.replace(\"results\", \"\")\r\n         res = res[:-1]\r\n         res = re.split(r'-r[0-9]-', res)\r\n         print(\"res split \" + str(res))\r\n         times = []\r\n"
                },
                {
                    "date": 1655050532691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,16 @@\n     def gameOn(self):\r\n         self.findPaths()\r\n         print(\"in gameMenu\")\r\n         self.results = \"results-\"\r\n-    \r\n         for i in range(len(self.opts)):\r\n             men = []\r\n+            tmp = []\r\n             for j in range(len(self.opts[i])):\r\n+                tmp.append(self.songList[self.opts[i][j]])\r\n                 tp = str(j) + \" : \" + self.songList[self.opts[i][j]][\"title\"] + \" - \" + self.songList[self.opts[i][j]][\"artist\"]\r\n                 men.append(tp)\r\n+            \r\n             p = Process(name=\"playsound\", target=playMusic, args=(self.paths[i],))\r\n             p.start()\r\n             pprint.pprint(men)\r\n             startTime = time.time()\r\n"
                },
                {
                    "date": 1655050550869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n             p.start()\r\n             pprint.pprint(men)\r\n             startTime = time.time()\r\n             choice = input(\"Escolha uma opção: \")\r\n+            f = tmp[choice]\r\n             endTime = time.time()\r\n             p.terminate()\r\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1655050577345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n             p.start()\r\n             pprint.pprint(men)\r\n             startTime = time.time()\r\n             choice = input(\"Escolha uma opção: \")\r\n-            f = tmp[choice]\r\n+            f = tmp[int(choice)]\r\n             endTime = time.time()\r\n             p.terminate()\r\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1655050646971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,12 +133,10 @@\n      \r\n      \r\n     def sR(self):\r\n         res = self.results.replace(\"results\", \"\")\r\n-        print(res)\r\n         res = res[:-1]\r\n         res = re.split(r'-r[0-9]-', res)\r\n-        print(\"res split \" + str(res))\r\n         times = []\r\n         opt = []\r\n         for i in range(1, len(res)):\r\n             times.append(res[i].split('#')[0][1:])\r\n"
                },
                {
                    "date": 1655050710163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             endTime = time.time()\r\n             p.terminate()\r\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n-            self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + choice + \"-\"\r\n+            self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + f + \"-\"\r\n         print(self.results)\r\n         self.sendResults()\r\n     \r\n \r\n"
                },
                {
                    "date": 1655050770052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,13 +84,14 @@\n             pprint.pprint(men)\r\n             startTime = time.time()\r\n             choice = input(\"Escolha uma opção: \")\r\n             f = tmp[int(choice)]\r\n+            print(f)\r\n             endTime = time.time()\r\n             p.terminate()\r\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n-            self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + f + \"-\"\r\n+            self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + str(f) + \"-\"\r\n         print(self.results)\r\n         self.sendResults()\r\n     \r\n \r\n"
                },
                {
                    "date": 1655050803038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n             f = tmp[int(choice)]\r\n             print(f)\r\n             endTime = time.time()\r\n             p.terminate()\r\n-            print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n+            #print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n             self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + str(f) + \"-\"\r\n         print(self.results)\r\n         self.sendResults()\r\n"
                },
                {
                    "date": 1655050812048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n             startTime = time.time()\r\n             choice = input(\"Escolha uma opção: \")\r\n             f = tmp[int(choice)]\r\n             print(f)\r\n+            print(\"\\n\\n\\n\\n\\n\")\r\n             endTime = time.time()\r\n             p.terminate()\r\n             #print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n"
                },
                {
                    "date": 1655050927804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         for i in range(len(self.opts)):\r\n             men = []\r\n             tmp = []\r\n             for j in range(len(self.opts[i])):\r\n-                tmp.append(self.songList[self.opts[i][j]])\r\n+                tmp.append(self.opts[i][j])\r\n                 tp = str(j) + \" : \" + self.songList[self.opts[i][j]][\"title\"] + \" - \" + self.songList[self.opts[i][j]][\"artist\"]\r\n                 men.append(tp)\r\n             \r\n             p = Process(name=\"playsound\", target=playMusic, args=(self.paths[i],))\r\n"
                },
                {
                    "date": 1655050973232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             print(f)\r\n             print(\"\\n\\n\\n\\n\\n\")\r\n             endTime = time.time()\r\n             p.terminate()\r\n-            #print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n+            print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n             self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + str(f) + \"-\"\r\n         print(self.results)\r\n         self.sendResults()\r\n"
                },
                {
                    "date": 1655051518175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,10 +160,10 @@\n         print(\"A espera resultados finais\")\r\n         while True:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             if data.decode('-')[0] == \"final\":\r\n-                print(\"Recebido resultados finais\")\r\n-                print(data.decode())\r\n+                print(data.decode('-')[1])\r\n+                self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 break\r\n         print(\"Fim do jogo...\")\r\n         \r\n def main():\r\n"
                },
                {
                    "date": 1655051563116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,15 +156,17 @@\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n         \r\n         \r\n     def waitForWinner(self):\r\n+        self.socket.settimeout(5)\r\n         print(\"A espera resultados finais\")\r\n         while True:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             if data.decode('-')[0] == \"final\":\r\n                 print(data.decode('-')[1])\r\n                 self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 break\r\n+        \r\n         print(\"Fim do jogo...\")\r\n         \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1655051580965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,17 +156,15 @@\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n         \r\n         \r\n     def waitForWinner(self):\r\n-        self.socket.settimeout(5)\r\n         print(\"A espera resultados finais\")\r\n         while True:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n             if data.decode('-')[0] == \"final\":\r\n                 print(data.decode('-')[1])\r\n                 self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 break\r\n-        \r\n         print(\"Fim do jogo...\")\r\n         \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1655051724818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                     break\r\n             except socket.timeout:\r\n-                print(\"Timeout\")\r\n+                pass\r\n \r\n     def sendResults(self):\r\n         self.sR()\r\n         while True:\r\n@@ -129,9 +129,9 @@\n                 if data.decode() == \"results-ack\":\r\n                     print(\"Resultados enviados\")\r\n                     break\r\n             except socket.timeout:\r\n-                print(\"Timeout\")\r\n+                pass\r\n         self.waitForWinner()\r\n      \r\n      \r\n     def sR(self):\r\n"
                },
                {
                    "date": 1655051885456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,10 +159,10 @@\n     def waitForWinner(self):\r\n         print(\"A espera resultados finais\")\r\n         while True:\r\n             data, addr = self.socket.recvfrom(self.buff)\r\n-            if data.decode('-')[0] == \"final\":\r\n-                print(data.decode('-')[1])\r\n+            if data.decode().split('-')[0] == \"final\":\r\n+                print(data.decode().split('-')[1])\r\n                 self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 break\r\n         print(\"Fim do jogo...\")\r\n         \r\n"
                },
                {
                    "date": 1655053155918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,13 @@\n                     self.gameOn()\r\n                     self.sendResults()\r\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n-                    break\r\n+                elif msg.split('-')[0] == \"results\":\r\n+                    self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n+                    data, addr = self.socket.recvfrom(self.buff)\r\n+                    if data.decode() == \"results-ack\":\r\n+                        print(\"Resultados enviados\")\r\n             except socket.timeout:\r\n                 pass\r\n \r\n     def sendResults(self):\r\n"
                },
                {
                    "date": 1655053199044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,11 +116,11 @@\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 elif msg.split('-')[0] == \"results\":\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n-                    data, addr = self.socket.recvfrom(self.buff)\r\n-                    if data.decode() == \"results-ack\":\r\n-                        print(\"Resultados enviados\")\r\n+                    print(\"Resultados enviados\")\r\n+                elif data.decode() == \"results-ack\":\r\n+                    \r\n             except socket.timeout:\r\n                 pass\r\n \r\n     def sendResults(self):\r\n"
                },
                {
                    "date": 1655053259971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,11 +117,11 @@\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 elif msg.split('-')[0] == \"results\":\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n-                elif data.decode() == \"results-ack\":\r\n+                elif data.decode().split('-')[0] == \"final\":\r\n                     \r\n-            except socket.timeout:\r\n+                    except socket.timeout:\r\n                 pass\r\n \r\n     def sendResults(self):\r\n         self.sR()\r\n"
                },
                {
                    "date": 1655053314453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,12 +118,14 @@\n                 elif msg.split('-')[0] == \"results\":\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif data.decode().split('-')[0] == \"final\":\r\n+                    print(data.decode().split('-')[1])\r\n+                    self.socket.sendto(\"final-ack\".encode(), addr)\r\n                     \r\n-                    except socket.timeout:\r\n-                pass\r\n-\r\n+                    \r\n+                    \r\n+                    \r\n     def sendResults(self):\r\n         self.sR()\r\n         while True:\r\n             print(\"a enviar resultados...\")\r\n"
                },
                {
                    "date": 1655053331872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,8 +119,9 @@\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n+                    print(\"Fim do jogo\")\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                     \r\n                     \r\n                     \r\n"
                },
                {
                    "date": 1655053346979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,12 +121,13 @@\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n                     print(\"Fim do jogo\")\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n+            except socket.timeout:\r\n+                print(\"Timeout\")\r\n                     \r\n                     \r\n                     \r\n-                    \r\n     def sendResults(self):\r\n         self.sR()\r\n         while True:\r\n             print(\"a enviar resultados...\")\r\n"
                },
                {
                    "date": 1655053353606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,9 @@\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n                     print(\"Fim do jogo\")\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n+                    break\r\n             except socket.timeout:\r\n                 print(\"Timeout\")\r\n                     \r\n                     \r\n"
                },
                {
                    "date": 1655053367869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,25 +125,9 @@\n                     break\r\n             except socket.timeout:\r\n                 print(\"Timeout\")\r\n                     \r\n-                    \r\n-                    \r\n-    def sendResults(self):\r\n-        self.sR()\r\n-        while True:\r\n-            print(\"a enviar resultados...\")\r\n-            try:\r\n-                self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n-                data, addr = self.socket.recvfrom(self.buff)\r\n-                if data.decode() == \"results-ack\":\r\n-                    print(\"Resultados enviados\")\r\n-                    break\r\n-            except socket.timeout:\r\n-                pass\r\n-        self.waitForWinner()\r\n      \r\n-     \r\n     def sR(self):\r\n         res = self.results.replace(\"results\", \"\")\r\n         res = res[:-1]\r\n         res = re.split(r'-r[0-9]-', res)\r\n@@ -163,19 +147,10 @@\n         for i in range(len(times)):\r\n             timeSum += float(times[i])\r\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n         \r\n+\r\n         \r\n-    def waitForWinner(self):\r\n-        print(\"A espera resultados finais\")\r\n-        while True:\r\n-            data, addr = self.socket.recvfrom(self.buff)\r\n-            if data.decode().split('-')[0] == \"final\":\r\n-                print(data.decode().split('-')[1])\r\n-                self.socket.sendto(\"final-ack\".encode(), addr)\r\n-                break\r\n-        print(\"Fim do jogo...\")\r\n-        \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n"
                },
                {
                    "date": 1655053373569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,10 +123,9 @@\n                     print(\"Fim do jogo\")\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                     break\r\n             except socket.timeout:\r\n-                print(\"Timeout\")\r\n-                    \r\n+                print(\"Timeout\")          \r\n      \r\n     def sR(self):\r\n         res = self.results.replace(\"results\", \"\")\r\n         res = res[:-1]\r\n@@ -146,9 +145,8 @@\n         timeSum = 0\r\n         for i in range(len(times)):\r\n             timeSum += float(times[i])\r\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n-        \r\n \r\n         \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1655053389547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n                     self.sendResults()\r\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 elif msg.split('-')[0] == \"results\":\r\n+                    sr(msg)\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n"
                },
                {
                    "date": 1655053461801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,10 +114,10 @@\n                     self.gameOn()\r\n                     self.sendResults()\r\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n-                elif msg.split('-')[0] == \"results\":\r\n-                    sr(msg)\r\n+                elif msg.split('-')[0] == \"results-ack\":\r\n+                    self.sR(msg)\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n"
                },
                {
                    "date": 1655053506038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,15 +111,13 @@\n                     self.generateMenu(msg)\r\n                 elif msg.split('-')[0] == \"go\":\r\n                     self.socket.sendto(\"go-ack\".encode(), addr)\r\n                     self.gameOn()\r\n-                    self.sendResults()\r\n-                elif msg.split('-')[0] == \"final\":\r\n-                    self.socket.sendto(\"final-ack\".encode(), addr)\r\n-                elif msg.split('-')[0] == \"results-ack\":\r\n                     self.sR(msg)\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n+                elif msg.split('-')[0] == \"final\":\r\n+                    self.socket.sendto(\"final-ack\".encode(), addr)\r\n                 elif data.decode().split('-')[0] == \"final\":\r\n                     print(data.decode().split('-')[1])\r\n                     print(\"Fim do jogo\")\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n"
                },
                {
                    "date": 1655053571499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,8 @@\n             print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n             finalTime = endTime - startTime\r\n             self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + str(f) + \"-\"\r\n         print(self.results)\r\n-        self.sendResults()\r\n     \r\n \r\n     def gameQueue(self):\r\n         self.socket.settimeout(6)\r\n"
                },
                {
                    "date": 1655053598817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n                     self.generateMenu(msg)\r\n                 elif msg.split('-')[0] == \"go\":\r\n                     self.socket.sendto(\"go-ack\".encode(), addr)\r\n                     self.gameOn()\r\n-                    self.sR(msg)\r\n+                    self.sR()\r\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n"
                },
                {
                    "date": 1655053676001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,12 +115,9 @@\n                     self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                     print(\"Resultados enviados\")\r\n                 elif msg.split('-')[0] == \"final\":\r\n                     self.socket.sendto(\"final-ack\".encode(), addr)\r\n-                elif data.decode().split('-')[0] == \"final\":\r\n-                    print(data.decode().split('-')[1])\r\n-                    print(\"Fim do jogo\")\r\n-                    self.socket.sendto(\"final-ack\".encode(), addr)\r\n+                    print(msg.split('-')[1])\r\n                     break\r\n             except socket.timeout:\r\n                 print(\"Timeout\")          \r\n      \r\n"
                },
                {
                    "date": 1655054852573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     def __init__(self):\r\n         self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n         self.buff = 4096\r\n-        self.clientPort = 8081\r\n+        self.clientPort = 8080\r\n         self.gamePort = 0\r\n         self.hostName = socket.gethostname()\r\n         self.gameMenu = \"\"\r\n         self.paths = [] #caminhos das musicas a reproduzir\r\n"
                },
                {
                    "date": 1655056334776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,7 +147,8 @@\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n     client = gameClient()\r\n     client.auth()\r\n+    client.disconnect()\r\n     \r\n if __name__ == \"__main__\":\r\n     main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1655056380816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n                     self.gamePort = int(data.decode().split('-')[2])\r\n                     self.socket.bind(('', self.gamePort))\r\n                     print(self.gamePort)\r\n                     self.gameQueue()\r\n+                    break\r\n             except socket.timeout:\r\n                 print(\"Timeout\")\r\n             \r\n     #atraves da string com o formato menu-r<numero>$id$id$id$id-r<numero>$id$id$id$id(...)-end\r\n"
                },
                {
                    "date": 1655056421793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,8 +142,11 @@\n         for i in range(len(times)):\r\n             timeSum += float(times[i])\r\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n \r\n+    def disconnect(self):\r\n+        self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n+\r\n         \r\n def main():\r\n     global serverAddr\r\n     serverAddr = sys.argv[1]\r\n"
                },
                {
                    "date": 1655056471572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,14 @@\n             timeSum += float(times[i])\r\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n \r\n     def disconnect(self):\r\n-        self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n+        while True:\r\n+            self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n+            data, addr = self.aSocket.recvfrom(self.buff)\r\n+            if data.decode() == \"disconnect-ack\":\r\n+                print(\"GG WP\")\r\n+                break\r\n \r\n         \r\n def main():\r\n     global serverAddr\r\n"
                },
                {
                    "date": 1655056537484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,8 +143,9 @@\n             timeSum += float(times[i])\r\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n \r\n     def disconnect(self):\r\n+        input(\"GG WP, prima para sair\")\r\n         while True:\r\n             self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n             data, addr = self.aSocket.recvfrom(self.buff)\r\n             if data.decode() == \"disconnect-ack\":\r\n"
                },
                {
                    "date": 1655056543807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,8 +144,10 @@\n         self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n \r\n     def disconnect(self):\r\n         input(\"GG WP, prima para sair\")\r\n+        print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n+\r\n         while True:\r\n             self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n             data, addr = self.aSocket.recvfrom(self.buff)\r\n             if data.decode() == \"disconnect-ack\":\r\n"
                },
                {
                    "date": 1655056549800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,14 +145,13 @@\n \r\n     def disconnect(self):\r\n         input(\"GG WP, prima para sair\")\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n-\r\n         while True:\r\n             self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n             data, addr = self.aSocket.recvfrom(self.buff)\r\n             if data.decode() == \"disconnect-ack\":\r\n-                print(\"GG WP\")\r\n+\r\n                 break\r\n \r\n         \r\n def main():\r\n"
                },
                {
                    "date": 1655056608551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n     def disconnect(self):\r\n         input(\"GG WP, prima para sair\")\r\n         print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n         while True:\r\n-            self.aSocket.sendto(\"disconnect\".encode(), (serverAddr, self.clientPort))\r\n+            self.aSocket.sendto((\"disconnect-\" + self.hostName).encode(), (serverAddr, self.clientPort))\r\n             data, addr = self.aSocket.recvfrom(self.buff)\r\n             if data.decode() == \"disconnect-ack\":\r\n \r\n                 break\r\n"
                }
            ],
            "date": 1655049130743,
            "name": "Commit-0",
            "content": "\r\nfrom http import server\r\nimport socket, sys, time, pprint, time, playsound, json, re\r\nfrom multiprocessing import Process\r\n\r\nserverAddr = \"\"\r\n\r\ndef playMusic(file):\r\n    playsound.playsound(file)\r\n    \r\nclass gameClient():\r\n    def __init__(self):\r\n        self.socket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n        self.buff = 4096\r\n        self.clientPort = 8081\r\n        self.gamePort = 0\r\n        self.hostName = socket.gethostname()\r\n        self.gameMenu = \"\"\r\n        self.paths = [] #caminhos das musicas a reproduzir\r\n        self.opts = [] #ids opcoes de jogo por ronda,\r\n        self.sols = [] #ids musicas a reproduzir\r\n        self.aSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\r\n        self.aSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n        self.socket.settimeout(None)\r\n        self.aSocket.bind(('', self.clientPort))\r\n        self.songList = json.load(open(\"../common/songlist.json\"))\r\n        self.results = \"\"\r\n    \r\n    def auth(self):\r\n    \r\n        self.aSocket.sendto(\"hello-\".encode() + self.hostName.encode(), (serverAddr, self.clientPort))\r\n        print(\"Mensagem enviada: hello-\" + self.hostName)\r\n        while True:\r\n            try:\r\n                data,addr = self.aSocket.recvfrom(self.buff)\r\n                if data.decode().split('-')[0] == \"hello\" and data.decode().split('-')[1] == \"ack\":\r\n                    print(\"Conexao ao servidor no endereço\" + str(addr[0]) + \":\" + str(addr[1]) + \" bem sucedida\")\r\n                    self.gamePort = int(data.decode().split('-')[2])\r\n                    self.socket.bind(('', self.gamePort))\r\n                    print(self.gamePort)\r\n                    self.gameQueue()\r\n            except socket.timeout:\r\n                print(\"Timeout\")\r\n            \r\n    #atraves da string com o formato menu-r<numero>$id$id$id$id-r<numero>$id$id$id$id(...)-end\r\n    #extrair os ids das musicas\r\n    def generateMenu(self, msg):\r\n        print(msg)\r\n        self.opts = []\r\n        self.sols = []\r\n        msg = msg.split('-end')[0]\r\n        print(msg)\r\n        for g in re.findall(r'r\\d((\\$\\d){4})',msg):\r\n            self.opts.append(g[0].split('$')[1:])\r\n        print(self.opts)\r\n        for sols in re.findall(r'((\\%\\d){'+str(len(self.opts))+'})',msg):\r\n            #print(sols[0].split('%')[1:])\r\n            self.sols = sols[0].split('%')[1:]\r\n        print(self.sols)\r\n\r\n       \r\n    def findPaths(self):\r\n        for i in range(len(self.sols)):\r\n            self.paths.append(self.songList[self.sols[i]][\"filePath\"])\r\n        print(self.paths)\r\n   \r\n       \r\n       \r\n    def gameOn(self):\r\n        self.findPaths()\r\n        print(\"in gameMenu\")\r\n        self.results = \"results-\"\r\n    \r\n        for i in range(len(self.opts)):\r\n            men = []\r\n            for j in range(len(self.opts[i])):\r\n                tp = str(j) + \" : \" + self.songList[self.opts[i][j]][\"title\"] + \" - \" + self.songList[self.opts[i][j]][\"artist\"]\r\n                men.append(tp)\r\n            p = Process(name=\"playsound\", target=playMusic, args=(self.paths[i],))\r\n            p.start()\r\n            pprint.pprint(men)\r\n            startTime = time.time()\r\n            choice = input(\"Escolha uma opção: \")\r\n            endTime = time.time()\r\n            p.terminate()\r\n            print(\"\\x1b[2J\\x1b[H\",end=\"\")\r\n            finalTime = endTime - startTime\r\n            self.results += \"r\" + str(i) + \"-@\" + str(finalTime) + \"#\" + choice + \"-\"\r\n        print(self.results)\r\n        self.sendResults()\r\n    \r\n\r\n    def gameQueue(self):\r\n        self.socket.settimeout(6)\r\n        print(\"A espera de jogos...\")\r\n        while True:\r\n            try:\r\n                data, addr = self.socket.recvfrom(self.buff)\r\n                msg = data.decode()\r\n                if msg == \"gameStart\":\r\n                    self.socket.sendto(\"gameStart-ack\".encode(), addr)\r\n                elif msg.split('-')[0] == \"menu\":\r\n                    print(\"Recebido menu\")\r\n                    self.socket.sendto(\"gameMenu-ack\".encode(), addr)\r\n                    self.generateMenu(msg)\r\n                elif msg.split('-')[0] == \"go\":\r\n                    self.socket.sendto(\"go-ack\".encode(), addr)\r\n                    self.gameOn()\r\n                    self.sendResults()\r\n                elif msg.split('-')[0] == \"final\":\r\n                    self.socket.sendto(\"final-ack\".encode(), addr)\r\n                    break\r\n            except socket.timeout:\r\n                print(\"Timeout\")\r\n\r\n    def sendResults(self):\r\n        self.sR()\r\n        while True:\r\n            print(\"a enviar resultados...\")\r\n            try:\r\n                self.socket.sendto(self.results.encode(), (serverAddr, self.gamePort))\r\n                data, addr = self.socket.recvfrom(self.buff)\r\n                if data.decode() == \"results-ack\":\r\n                    print(\"Resultados enviados\")\r\n                    break\r\n            except socket.timeout:\r\n                print(\"Timeout\")\r\n        self.waitForWinner()\r\n     \r\n     \r\n    def sR(self):\r\n        res = self.results.replace(\"results\", \"\")\r\n        res = res[:-1]\r\n        res = re.split(r'-r[0-9]-', res)\r\n        print(\"res split \" + str(res))\r\n        times = []\r\n        opt = []\r\n        for i in range(1, len(res)):\r\n            times.append(res[i].split('#')[0][1:])\r\n            opt.append(res[i].split('#')[1])\r\n        print(\"tempos: \" + str(times))\r\n        print(\"options: \" + str(opt))        \r\n        \r\n        nCorrectas = 0\r\n        for i in range(len(opt)):\r\n            if opt[i] == self.sols[i]:\r\n                nCorrectas += 1\r\n        timeSum = 0\r\n        for i in range(len(times)):\r\n            timeSum += float(times[i])\r\n        self.results = \"results-\" + str(nCorrectas) + \"-\" + str(timeSum)\r\n        \r\n        \r\n    def waitForWinner(self):\r\n        print(\"A espera resultados finais\")\r\n        while True:\r\n            data, addr = self.socket.recvfrom(self.buff)\r\n            if data.decode('-')[0] == \"final\":\r\n                print(\"Recebido resultados finais\")\r\n                print(data.decode())\r\n                break\r\n        print(\"Fim do jogo...\")\r\n        \r\ndef main():\r\n    global serverAddr\r\n    serverAddr = sys.argv[1]\r\n    client = gameClient()\r\n    client.auth()\r\n    \r\nif __name__ == \"__main__\":\r\n    main()"
        }
    ]
}