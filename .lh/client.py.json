{
    "sourceFile": "client.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1649326205468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649326747361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,27 @@\n+from re import M\n import time, struct, socket, sys, threading, Receiver, player\n \n mCastAddr = \"\"\n   \n+  \n+class GameHandler(threading.Thread):\n+    def __init__(self,m):\n+        self.mCastAddr = m\n+        self.gameState = 0\n+        self.timeToAnswer = 0\n+        self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n+        self.mainPort = 30000\n+        self.buffer = 2048\n+    def run(self):\n+        self.mainSocket.bind(('', self.mainPort))\n+        while True:\n+            data,addr = self.mainSocket.recvfrom(self.buffer)\n+            if data\n+  \n+  \n+  \n+  \n def messageHandler(self,s, buffer):\n     global mCastAddr\n     while True:\n         data, addr = s.recvfrom(buffer)\n@@ -12,20 +31,26 @@\n             break\n         elif data.split('-')[0] == 'ready' and data.split('-')[1] == 'ack':\n             print(\"Ready ok!\")\n             break\n+        elif data.split('-')[0] == 'start' and data.split('-')[1] == 'ack':\n+            g = GameHandler(mCastAddr)\n+            g.start()            \n+        \n         else:\n             print(\"Unknown message!\")\n-            break    \n+            break\n     \n     \n     \n+    \n+    \n+    \n def main():\n     serverAddr = sys.argv[1]\n     controlPort = 8080\n     mainPort = 30000\n     controlSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n-    mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n     controlSocket = socket.bind('', controlPort)\n     mainSocket = socket.bind('b', mainPort)\n     buffer = 2048\n     \n@@ -34,6 +59,4 @@\n     messageHandler(controlSocket, buffer)\n     controlSocket.sendto(b'ready', (serverAddr, controlPort))\n     messageHandler(controlSocket, buffer)\n     \n-    while True:\n-        data = mainSocket.recvfrom(buffer)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649326768853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n             break\n         elif data.split('-')[0] == 'start' and data.split('-')[1] == 'ack':\n             g = GameHandler(mCastAddr)\n             g.start()            \n-        \n+            break\n         else:\n             print(\"Unknown message!\")\n             break\n     \n"
                },
                {
                    "date": 1649327968898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,15 @@\n         self.mainPort = 30000\n         self.buffer = 2048\n     def run(self):\n         self.mainSocket.bind(('', self.mainPort))\n-        while True:\n-            data,addr = self.mainSocket.recvfrom(self.buffer)\n-            if data\n+        rec = Receiver(mCastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n+        res = rec.worker()\n+        if res == 1:\n+            self.mainSocket\n   \n   \n   \n-  \n def messageHandler(self,s, buffer):\n     global mCastAddr\n     while True:\n         data, addr = s.recvfrom(buffer)\n@@ -41,11 +41,8 @@\n             break\n     \n     \n     \n-    \n-    \n-    \n def main():\n     serverAddr = sys.argv[1]\n     controlPort = 8080\n     mainPort = 30000\n"
                },
                {
                    "date": 1649334025004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,16 @@\n mCastAddr = \"\"\n   \n   \n class GameHandler(threading.Thread):\n-    def __init__(self,m):\n+    def __init__(self,m,socket):\n         self.mCastAddr = m\n         self.gameState = 0\n         self.timeToAnswer = 0\n         self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n         self.mainPort = 30000\n         self.buffer = 2048\n+        self.controlSocket = socket\n     def run(self):\n         self.mainSocket.bind(('', self.mainPort))\n         rec = Receiver(mCastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n         res = rec.worker()\n@@ -20,9 +21,9 @@\n             self.mainSocket\n   \n   \n   \n-def messageHandler(self,s, buffer):\n+def messageHandler(s, buffer):\n     global mCastAddr\n     while True:\n         data, addr = s.recvfrom(buffer)\n         if data.split('-')[0] == 'hello' and data.split('-')[1] == 'ack':\n"
                },
                {
                    "date": 1649334122451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,12 @@\n mCastAddr = \"\"\n   \n   \n class GameHandler(threading.Thread):\n-    def __init__(self,m,socket):\n+    def __init__(self,m,socket,serverAddr, serverPort):\n         self.mCastAddr = m\n+        self.serverAddr = serverAddr\n+        self.serverPort = serverPort\n         self.gameState = 0\n         self.timeToAnswer = 0\n         self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n         self.mainPort = 30000\n@@ -17,9 +19,9 @@\n         self.mainSocket.bind(('', self.mainPort))\n         rec = Receiver(mCastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n         res = rec.worker()\n         if res == 1:\n-            self.mainSocket\n+            self.controlSocket.sendto(b'song-ok' + self.mCastAddr, rec.addr)\n   \n   \n   \n def messageHandler(s, buffer):\n"
                },
                {
                    "date": 1649335137053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-from re import M\n-import time, struct, socket, sys, threading, Receiver, player\n+import time, struct, socket, sys, threading, Receiver, player, pickle\n \n mCastAddr = \"\"\n   \n   \n@@ -14,17 +13,43 @@\n         self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n         self.mainPort = 30000\n         self.buffer = 2048\n         self.controlSocket = socket\n+        self.timeToAnswer = 0\n+        self.choices = []\n+        \n+    #function that receives the array of choices and displays a menu with the choices, for the user to choose\n+    def round(self):\n+        counter = 1\n+        for entry in self.choices:\n+            print(str(counter) + \" - \" + entry)\n+            counter += 1\n+        timeStart = time.time()\n+        option = input(\"Choose a song: \")\n+        timeEnd = time.time()\n+        finalTime = timeEnd - timeStart\n+        selected = self.choices[int(option)-1]\n+        return str(selected) + \"-\" + str(finalTime)\n+        \n     def run(self):\n         self.mainSocket.bind(('', self.mainPort))\n         rec = Receiver(mCastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n         res = rec.worker()\n         if res == 1:\n             self.controlSocket.sendto(b'song-ok' + self.mCastAddr, rec.addr)\n-  \n-  \n-  \n+            while True:\n+                data, addr = self.controlSocket.recvfrom(self.buffer)\n+                self.choices = pickle.loads(data)\n+                if data.split('-')[0] == 'choices':\n+                    self.controlSocket.sendto(b'choices-ok' + self.mCastAddr, addr)\n+                elif data.split('-')[0] == 'game-start':\n+                    self.controlSocket.sendto(b'game-start-ok' + self.mCastAddr, addr)\n+                    break\n+        else:\n+            self.controlSocket.sendto(b'song-not-ok' + self.mCastAddr, rec.addr)\n+        round()\n+        \n+\n def messageHandler(s, buffer):\n     global mCastAddr\n     while True:\n         data, addr = s.recvfrom(buffer)\n"
                },
                {
                    "date": 1649424354168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,86 @@\n-import time, struct, socket, sys, threading, Receiver, player, pickle\n+import socket, threading, json, Receiver, pickle, time, sys, Player\n \n-mCastAddr = \"\"\n-  \n-  \n+mcastAddr = \"\"\n+gameState = 0\n+\n+class loginStatusHandler(threading.Thread):\n+    def __init__(self, serverAddr):\n+        threading.Thread.__init__(self)\n+        self.controlSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n+        self.controlPort = 8080\n+        \n+        self.serverAddr = serverAddr\n+        global mCastAddr\n+        self.buffer = 2048\n+\n+        \n+    def run(self):\n+        self.controlSocket.bind(('', self.controlPort))\n+        self.controlSocket.sendto('hello-'.encode(), (self.serverAddr, self.controlPort))\n+    \n+        data, addr = self.controlSocket.recvfrom(self.buffer)\n+        data = data.decode()\n+        if data.split ('-')[0] == 'hello' and data.split('-')[1] == 'ack':\n+            print(\"Hello OK!\")\n+            mCastAddr = data.split('-')[2]\n+        \n+        else:\n+            print(str(data))\n+            print(\"Unknown message!\")\n+        \n+        self.controlSocket.sendto('ready-'.encode(), (self.serverAddr, self.controlPort))\n+        data, addr = self.controlSocket.recvfrom(self.buffer)\n+        data = data.decode()\n+        if data.split ('-')[0] == 'ready' and data.split('-')[1] == 'ack':\n+            print(\"Ready ok!\")\n+        else:\n+            print(\"message:\" +str(data))\n+            print(\"Unknown message!\")\n+        while True:\n+            time.sleep(5)\n+            self.controlSocket.sendto('control-'.encode(), (self.serverAddr, self.controlPort))\n+            data, addr = self.controlSocket.recvfrom(self.buffer)\n+            data = data.decode()\n+            if data.split ('-')[0] == 'control' and data.split('-')[1] == 'ack':\n+                print(\"Control ok!\")\n+                time.sleep(5)\n+            else:\n+                print(\"message:\" +str(data)) \n+                print(\"Unknown message!\")\n+                break\n+        \n class GameHandler(threading.Thread):\n-    def __init__(self,m,socket,serverAddr, serverPort):\n-        self.mCastAddr = m\n+    def __init__(self, serverAddr):\n+        threading.Thread.__init__(self)\n+        self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n+        self.mainPort = 50000\n+        self.controlSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n+        self.controlPort = 30000\n         self.serverAddr = serverAddr\n-        self.serverPort = serverPort\n-        self.gameState = 0\n-        self.timeToAnswer = 0\n-        self.mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n-        self.mainPort = 30000\n         self.buffer = 2048\n-        self.controlSocket = socket\n-        self.timeToAnswer = 0\n         self.choices = []\n+        self.timeStart = 0\n+        self.timeEnd = 0\n+        self.finalTime = 0\n+        self.selected = 0\n+       \n+    def displayChoices(self):\n+        print(\"Choices:\")\n+        for i in range(len(self.choices)):\n+            print(str(i+1) + \": \" + self.choices[i])\n+        print(\"\")\n+           \n+       \n         \n-    #function that receives the array of choices and displays a menu with the choices, for the user to choose\n-    def round(self):\n-        counter = 1\n-        for entry in self.choices:\n-            print(str(counter) + \" - \" + entry)\n-            counter += 1\n-        timeStart = time.time()\n-        option = input(\"Choose a song: \")\n-        timeEnd = time.time()\n-        finalTime = timeEnd - timeStart\n-        selected = self.choices[int(option)-1]\n-        return str(selected) + \"-\" + str(finalTime)\n-        \n     def run(self):\n+        global gameState\n+        print(\"Waiting for Game...\")\n         self.mainSocket.bind(('', self.mainPort))\n-        rec = Receiver(mCastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n+        self.controlSocket.bind(('', self.controlPort))\n+        rec = Receiver.Receiver(mcastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n         res = rec.worker()\n-        if res == 1:\n+        if res:\n             self.controlSocket.sendto(b'song-ok' + self.mCastAddr, rec.addr)\n             while True:\n                 data, addr = self.controlSocket.recvfrom(self.buffer)\n                 self.choices = pickle.loads(data)\n@@ -45,43 +90,38 @@\n                     self.controlSocket.sendto(b'game-start-ok' + self.mCastAddr, addr)\n                     break\n         else:\n             self.controlSocket.sendto(b'song-not-ok' + self.mCastAddr, rec.addr)\n-        round()\n-        \n-\n-def messageHandler(s, buffer):\n-    global mCastAddr\n-    while True:\n-        data, addr = s.recvfrom(buffer)\n-        if data.split('-')[0] == 'hello' and data.split('-')[1] == 'ack':\n-            print(\"Hello OK!\")\n-            mCastAddr = data.split('-')[2]\n-            break\n-        elif data.split('-')[0] == 'ready' and data.split('-')[1] == 'ack':\n-            print(\"Ready ok!\")\n-            break\n-        elif data.split('-')[0] == 'start' and data.split('-')[1] == 'ack':\n-            g = GameHandler(mCastAddr)\n-            g.start()            \n-            break\n+        self.timeStart = time.time()\n+        p = Player(res)\n+        p.start()\n+        self.displayChoices()\n+        selected = input(\"Enter your choice: \")\n+        choice = self.choices[selected-1]\n+        self.timeEnd = time.time()\n+        self.finalTime = self.timeEnd - self.timeStart\n+        print(\"You selected: \" + choice)\n+        print(\"final time: \" + str(self.finalTime))\n+        self.controlSocket.sendto(b'choice-' + choice.encode() + '-' + str(self.finalTime), addr)\n+        data, addr = self.controlSocket.recvfrom(self.buffer)\n+        if data.split('-')[0] == 'choice-ok':\n+            print(\"Choice ok!\")\n         else:\n             print(\"Unknown message!\")\n-            break\n+        print(\"gameOver!\")\n+        gameState = 0\n     \n     \n-    \n def main():\n+    if len(sys.argv) != 2:\n+        print(\"Usage: python3 client.py <server-ip>\")\n+        sys.exit(1)\n     serverAddr = sys.argv[1]\n-    controlPort = 8080\n-    mainPort = 30000\n-    controlSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n-    controlSocket = socket.bind('', controlPort)\n-    mainSocket = socket.bind('b', mainPort)\n-    buffer = 2048\n+    loginStatus = loginStatusHandler(serverAddr)\n+    loginStatus.start()\n+    loginStatus.join()\n+    game = GameHandler(serverAddr)\n+    game.start()\n+    game.join()\n     \n-    \n-    controlSocket.sendto(b'hello', (serverAddr, controlPort))\n-    messageHandler(controlSocket, buffer)\n-    controlSocket.sendto(b'ready', (serverAddr, controlPort))\n-    messageHandler(controlSocket, buffer)\n-    \n+if __name__ == \"__main__\":\n+    main()\n"
                },
                {
                    "date": 1649426052411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             print(\"Ready ok!\")\n         else:\n             print(\"message:\" +str(data))\n             print(\"Unknown message!\")\n-        while True:\n+'''         while True:\n             time.sleep(5)\n             self.controlSocket.sendto('control-'.encode(), (self.serverAddr, self.controlPort))\n             data, addr = self.controlSocket.recvfrom(self.buffer)\n             data = data.decode()\n@@ -46,9 +46,9 @@\n                 time.sleep(5)\n             else:\n                 print(\"message:\" +str(data)) \n                 print(\"Unknown message!\")\n-                break\n+                break '''\n         \n class GameHandler(threading.Thread):\n     def __init__(self, serverAddr):\n         threading.Thread.__init__(self)\n"
                },
                {
                    "date": 1649426268485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         global gameState\n         print(\"Waiting for Game...\")\n         self.mainSocket.bind(('', self.mainPort))\n         self.controlSocket.bind(('', self.controlPort))\n-        rec = Receiver.Receiver(mcastAddr,self.mainPort,self.mainSocket,self.buffer).start()\n+        rec = Receiver.Receiver(mcastAddr,self.mainPort,self.mainSocket,'file.wav').start()\n         res = rec.worker()\n         if res:\n             self.controlSocket.sendto(b'song-ok' + self.mCastAddr, rec.addr)\n             while True:\n"
                },
                {
                    "date": 1649426302606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         global gameState\n         print(\"Waiting for Game...\")\n         self.mainSocket.bind(('', self.mainPort))\n         self.controlSocket.bind(('', self.controlPort))\n-        rec = Receiver.Receiver(mcastAddr,self.mainPort,self.mainSocket,'file.wav').start()\n+        rec = Receiver.Receiver(mcastAddr,self.mainPort,self.mainSocket,'file.wav')\n         res = rec.worker()\n         if res:\n             self.controlSocket.sendto(b'song-ok' + self.mCastAddr, rec.addr)\n             while True:\n"
                }
            ],
            "date": 1649326205468,
            "name": "Commit-0",
            "content": "import time, struct, socket, sys, threading, Receiver, player\n\nmCastAddr = \"\"\n  \ndef messageHandler(self,s, buffer):\n    global mCastAddr\n    while True:\n        data, addr = s.recvfrom(buffer)\n        if data.split('-')[0] == 'hello' and data.split('-')[1] == 'ack':\n            print(\"Hello OK!\")\n            mCastAddr = data.split('-')[2]\n            break\n        elif data.split('-')[0] == 'ready' and data.split('-')[1] == 'ack':\n            print(\"Ready ok!\")\n            break\n        else:\n            print(\"Unknown message!\")\n            break    \n    \n    \n    \ndef main():\n    serverAddr = sys.argv[1]\n    controlPort = 8080\n    mainPort = 30000\n    controlSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n    mainSocket = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n    controlSocket = socket.bind('', controlPort)\n    mainSocket = socket.bind('b', mainPort)\n    buffer = 2048\n    \n    \n    controlSocket.sendto(b'hello', (serverAddr, controlPort))\n    messageHandler(controlSocket, buffer)\n    controlSocket.sendto(b'ready', (serverAddr, controlPort))\n    messageHandler(controlSocket, buffer)\n    \n    while True:\n        data = mainSocket.recvfrom(buffer)"
        }
    ]
}